2020 IEEE International Conference on Robotics and Automation (ICRA)
31 May - 31 August, 2020. Paris, France
Path-Following Model Predictive Control of Ballbots
Thomas K. Jespersen, Mohammad al Ahdab, Juan de Dios F. Mendez,
Malte R. Damgaard, Karl D. Hansen, Rasmus Pedersen and Thomas Bak
Abstract(cid:151)Thispaperintroducesanovelapproachformodel limits the useful horizon length. Besides, the advancements
predictive control of ballbots for path-following tasks. Ballbots in computers over the last decade enables a larger search
are dynamically unstable mobile robots which are designed to
space of possible controls to be explored. Recently, this has
balance on a single ball. The model presented in this paper
been addressed by the tensor dynamic window approach
is a simpli(cid:2)ed version of a full quaternion-based model of
ballbots’ underactuated dynamics which is suited for online (TDWA) [4], which uses a grid-map representation with an
implementation. Furthermore, the approach is extended to ef(cid:2)cient collision checking approach. However, TDWA is
handle nearby obstacles directly in the MPC formulation. The limited to a (cid:2)xed set of precomputed control sequences and
presented controller is validated through simulation on a high
also to the resolution of the grid-map.
(cid:2)delity model as well as through real-world experiments on a
For ballbots, past research have mainly focused on robust
physical ballbot system.
control of the attitude and velocity, without considering the
I. INTRODUCTION dynamic motion behaviour that ballbots exhibit. The few
Safetyisaveryimportantelementifrobotsshouldbeable that have considered dynamic motion planning include the
tonavigateandsolvetasksinhuman-occupiedenvironments. gain-scheduledLQRcontrollerproposedin[5]andsimilarly
These environments are challenging for robots because hu- the iterated LQG scheme proposed in [6]. Focusing mainly
mans are dynamically moving obstacles and cluttered en- on optimal motion, these two approaches do not consider
vironments will leave only narrow passages for the robot obstacles and only considers point-to-point planning.
to navigate. To accommodate the possible rapid changes In [1] and [7], it is shown how shape trajectories can be
in the scenes, planning and control algorithms must be computed through optimization given desired acceleration
able to produce and execute safe and feasible paths fast. trajectoriesinpositionspace.In[8]adifferentially(cid:3)atoutput
Consequently, minimizing compute time is of interest. oftheballbotisderivedandusedfortrajectoryoptimization,
Ballbots have unique holonomic properties and are well enabling arbitrary motion and free constraints on e.g., the
suited for cluttered environments and human-robot interac- position. The proposed method is capable of converting an
tion. Not only can they move freely in any direction, but optimal kinematic path from a path planning algorithm to
they also exhibit human-friendly motions as a result of their a dynamically feasible path for the ballbot, which converts
underactuated dynamics. Ballbots fall in the category of into an angle trajectory.
shape-accelerated systems [1], where the shape variables are This paper takes another approach and proves that the
the inclination and orientation of the ballbot, in the latter highly non-linear underactuated ballbot system can be con-
referred to as the attitude. Hence to accelerate ballbots have trolled as a linear system which does not even include the
tolean.Theplanningandcontrolalgorithmsneedtoconsider underactuatedproperties.Givenapath-followingformulation
these dynamics to ensure that the paths of interest can be weallowthe(cid:2)nalrobottrajectorytodeviateintimefromthe
executed. desired trajectory, hence allowing underactuated deviations
A common approach to local planning for mobile robots without punishing them.
is to use model predictive control. To make the controller The approach presented in this paper uses an MPC for-
computationally feasible in real-time some of the earliest mulation to control the motion of ballbots given a low-level
and most popular approaches, such as the dynamic window balance controller. The focus of this work is to perform
approach (DWA) [2] and trajectory rollout [3], used simple shape-space planning with an MPC to generate control
dynamical models and reduced the search space of possible actions that create progress along a planned path and avoid
controls to constant translational and rotational velocities any obstacles at the expense of closely following the path.
overarelativelyshorttimehorizon.Theseapproachesarenot Therationaleis thattherobotwillbe navigatingcorridors
suited for ballbots since they do not account for the under- oflargecampuseslikehospitalsandairports,whereprogress
actuated dynamics while the constant control action greatly through the corridor and sensible obstacle avoidance are
prioritized. Furthermore, global planning is performed on
ThisworkissupportedbyInnovationFundDenmarkinprojectnumber high-level maps and simply presented as long straight lines
7076-00051BcalledRobotDigitalSignage.
in the middle of the corridors. This means that the robot
T.K.JespersenwaswithDepartmentofElectronicSystems,AalborgUni-
versity,Denmark.HeisnowwithAPTIV(formerlynuTonomy),Singapore, should preferably progress naturally along the path, but
thomasj@tkjelectronics.dk not necessarily follow it closely. In contrast to DWA and
M.alAhdab,J.F.Mendez,M.R.Damgaard,K.D.Hansen,R.Pedersen
Trajectory Rollout, this formulation allows varying control
andT.BakarewithDepartmentofElectronicSystems,AalborgUniversity,
Denmark,fmrd,maah,rpe,kdh,tbag@es.aau.dk action along the horizon.
978-1-7281-7395-5/20/$31.00 ©2020 IEEE 1498
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. The MPC is designed on a simpli(cid:2)ed and linearized III. BALLBOTMODEL
model without any underactuated dynamics but with a path- Severalapproachestomodelingball-balancingrobotshave
following cost function that compensates for the lack of been proposed in [5], [9](cid:150)[11]. Common to these models
underactuated dynamics. A set of lifted output constraints are either a decoupled planar model or an Euler-angle based
ensuresthattheMPCstayswithinthelimitsofthelow-level coupledmodelresultingincomplicatedsymbolicderivations,
controller and actuators. Obstacle avoidance is achieved by including an exhaustive mixture of sine and cosine expres-
including nearby obstacles as both constraints and exponen- sions. This work takes a different approach by utilizing the
tial cost. quaternion-based model derived in [12] for a ballbot with
The remainder of the paper is structured as follows; threeomni-wheelsinstalledwith120(cid:14)separation. Themodel
Sec. II outlines the ballbot system architecture. In Sec. III,
a quaternion-based model of the ballbot is presented and
simpli(cid:2)ed for use in the MPC. In Sec. IV, the shape-
acceleratedMPCapproachispresented.Sec.V,validatesthe z
y
proposedcontrolapproachthroughbothsimulationandreal- x
world experiments with a physical ballbot system. Finally, fBg
l
Sec. VI, concludes the work.
II. SYSTEMARCHITECTURE z
z
y x
The system architecture generally follows that of mobile rk {H} { I } x
robots, where a user can input a goal, such as a desired y
location in a map. The goal is transformed into the desired
Fig.2. Rigidbodydiagramofaballbalancingrobot,withattachedmodel
path through a path planner utilizing feedback from SLAM f g f g f g
frames. I is the inertial frame, H is the heading frame, and B is
and obstacle detection algorithms which depend on sensor thebodyframe.
feedback. Subsequently, the desired path, nearby obstacles,
decomposes the ballbot into two rigid bodies; one for the
and velocity and heading estimates are forwarded to a path-
ball and one for the robot body, which balances on top of
following controller, which provides attitude references for
the ball as illustrated in Fig. 2. The model in Fig. 2 shows
a low-level balancing controller. The system architecture,
three frames: The inertial frame, fIg; the heading frame,
along with a CAD model of the ballbot, is illustrated in
fHg,whichisalwayshorizontalbutalignedwiththeheading
Fig. 1. The computation effort is divided between a high-
of the robot; and the body frame, fBg. The x-axis de(cid:2)nes
the forward direction of the robot and the heading angle is
Onboard Computer thus de(cid:2)ned as the angle between the x-axis of the heading
frame and the inertial frame. Moreover, three motors with
User Deﬁned Goal
Path Planner MLoacpapliinzga taionnd 3DSLe CinDasAmoRresra oasmsunmi-wedhetoelrsoallreonrigthidelybaaltltawcihthedouttostlhipe.bTohdey.twToheriwgihdebelosdaieres
Desired are described by two degrees of freedom for the ball, which
Path Obstacle
VEeHlsoetciamidtyain taegnsd anDde Mteacptiopning is assumed not to rotate around the vertical axis, and three
ONbsetaarcblyes degreesoffreedomforthehbody.Thegieneralizedcoordinates
of the model are given by
MPC
T
QRueafeterernnicoenRAVeenfelgorueclniatycre Microprocessor (cid:31)= Ix Iy IBq (1)
where Ixand Iyaretheinertialframelocationofthecenterof
Balancing State Sensors
Controller Estimators EnIcModUers theballand Iqisthequaterniondescribingtheattitudeofthe
B
Torque References robot body in the inertial frame. The model assumes no slip
betweentheballandground,suchthattherotationaldegrees
Motor Drivers Motors
of freedom of the ball link directly to the translational
movement of both the ball and the body. Symbolic forward
Fig.1. 3Dmodeloftheconsideredballbotalongwithasimpli(cid:2)edsketch and inverse kinematics models are derived for the odometry,
ofthesystemarchitecture. enabling conversion between the angular velocities of the
omni-wheels and the translational velocity of the ball given
level onboard computer and a low-level real-time microcon- the current attitude of the body.
troller.Theonboardcomputer(IntelNUC)runsROS,which The dynamics of the ballbot are modelled using La-
handles SLAM and obstacle detection along with the path- grangian mechanics with the kinetic energy of the ball,
following controller. The low-level microcontroller (ARM T ; the kinetic energy from rotational and translational
k
Cortex-M7) runs the balancing controller and local state movement of the body, T ; the kinetic energy of the omni-
b
estimators. wheels, T ; and the potential energy of the body, V , which
w b
1499
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. stems from changes in height of the center of mass as the Note that the rank of the input matrix is smaller than the
inclination changes. The Lagrangian is thus given as degrees of freedom of the system resulting in the underac-
tuated dynamics. For more details on the quaternion model
L=T +T +T (cid:0)V (2)
k b w b consult [12].
Due to the chosen dimension of the generalized coordi-
A. Simpli(cid:2)cation of Model for MPC Implementation
nates in (1), six differential equations result from applying
the Lagrangian to the Euler-Lagrange equation. Also, three The attitude dynamics of a ballbot in a region close to
friction terms are included to approximate the expected the upright position can be assumed suf(cid:2)ciently faster than
friction in the system: Viscous friction from ball to ground, the translational dynamics [12] such that it is possible to
D ; viscous friction from body angular velocity, D ; and design two controllers in a cascaded con(cid:2)guration. A non-
K B
viscous friction from motor angular velocity, D , which is linearslidingmodecontrollerisdesignedin[12]tostabilize
M
a combination of internal motor friction and ball to omni- theattitudeofthebodytoagivenbodyreferenceframe,fB~g,
wheel friction. These friction components are included in given a quaternion reference, ~IBqref, and an angular velocity
the equations of motion by adding the friction force matrix, reference, ~B!ref.Theevolutionofthequaternionreferenceis
D((cid:31)_). assumed to be kinematically linked to the angular velocity
reference.Sincetheslidingmodecontrollerisdesignedtobe
D((cid:31)_)=DK((cid:31)_)+DB((cid:31)_)+DM((cid:31)_) (3) robust against matched uncertainties, it can be assumed that
thebalancecontrollerwillstabilizetheattitudewhiledriving
The torque generated by the three omni-wheels, (cid:28) , acts
m in any direction with any velocity within the operational
in a coupled way on both the ball and the body. This input
envelope. This envelope is limited by the dynamics of the
torque is included in the equations of motion by applying
balance controller which is closely related to the limitations
Hamilton’s principle, where the inverse kinematic relation-
ofmotortorqueandfriction,toavoidslip.DesigninganMPC
ship is used to map the moto r torq!ues to the generalized
forthetranslationaldynamicswillthusonlyrequireasubset
coordinate space.
of the full quaternion-based model from Sec. III. However,
@(cid:18)_ T thetranslationalsubsetisstillcoupledwiththefulldynamics
Q((cid:31);(cid:28)m)= @(cid:31)_ (cid:28)m (4) making it infeasible for real-time solving.
By assuming a robust and fast balance controller, a MPC
where (cid:18)_(Iq; Iq_; Ix_; Iy_) is the angular velocities of the three can be designed using the underactuated shape-acceleration
B B
omni-wheels. relationship between the body inclination and translational
The dimension of the generalized coordinate space is, acceleration. A linear shape-space accelerated model is de-
however, larger than the degrees of freedom of the system rived in (8) by linearizing a heading-independent version of
since all four quaternion elements are included. Thus, the the quaternion-based model from (6), with the inclusion of
holonomic quaternion constraint, IqTIq = 1, has to be the closed loop balance controller. The heading direction is
B B
included and eliminated using a Lagrange multiplier. The de(cid:2)ned as the 2D projection of the body x-axis vector onto
resulting equations of motion consists of six coupled differ- the xy-plane of the inertial frame. The attitude quaternion
f e e e e
ential equations in the form of de(cid:2)ned in the heading frame furthermore captures the de-
f e coupledin2clina3tio(cid:12)ninthexandy eleme2ntsoft3he(cid:12)quaternion
M((cid:31))(cid:31)(cid:127)+C((cid:31);(cid:31)_)(cid:31)_ +G((cid:31))+D(e(cid:31)_)=Q((cid:31))(cid:28)m (5) suchthattheacce(cid:12)(cid:12)lerationcoef(cid:2)cientscanbecom(cid:12)(cid:12)putedfrom
4 5(cid:12) 4 5(cid:12)
where M((cid:31)) is theemass/inertia matrix, C((cid:31);(cid:31)_) is the @Hx(cid:127) (cid:12)(cid:12) @Hx(cid:127) (cid:12)(cid:12)
Coriolis andecentrifugal force matrix, G((cid:31)) is the gravita- A = @HBq ; A = @~HBqref
tional force matrix, D((cid:31)_) is the friction/dampening force v_q @Hy(cid:127) v_qr @Hy(cid:127)
matrix and Q((cid:31)) is a transformation matrix that transforms @HBq qrxef==xq~~ref @~HBqref qrxef==xq~~ref
the motor torques into equivalent torques in the generalized !ref=!~ref !ref=!~ref (8)
coordinate space. By reorganizing the equations the non- where Hx(cid:127)and Hy(cid:127)de(cid:2)nestheaccelerationoftheballbotinthe
linear qu2aternion-based control-af(cid:2)ne model of the3ballbot heading frame, and HBq and ~HBqref are the attitude quaternion
can be f4ormulated (cid:16)as (cid:17)5 and quaternion reference de(cid:2)ned in the heading frame. The
f e e e modelislinearizedaroundtheoperatingpointde(cid:2)nedin(9),
(cid:31)_
" # being the upright equilibrium where the balance controller
x_ = (cid:0)
M((cid:31)) 1 (cid:0)C((cid:31);(cid:31)_)(cid:31)_ (cid:0)G((cid:31))(cid:0)D((cid:31)_) tracksthezerohinclinationreiferencewhithzeroanguilarveloc-
(6)
f e ity reference and zero translational velocity.
0 (cid:2)
+ M((cid:31))6(cid:0)13Q((cid:31)) (cid:28)m q~=q~rehf = 1 0i 0 0 T; q~_ = 0 0 0 0 T;
(9)
wcohoerrdeinthaetesstaatnedvtehcehtiorrdiesrtihvaeticvoenscia.tee.nxati=on[(cid:31)of;i(cid:31)t_h]e,greesnuelrtainligzeidn !~ref = 0 0 0 T; I~x_ =0; ~Iy_ =0
x= Ix Iy IqT Ix_ Iy_ Iq_T T (7) theThlienelainriezaerdizerdelamtioodneslhimpabtreitcweseeAnv_tqheanindclAinva_qtironc-arpetluatreeds
B B
1500
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. elements of the two attitude quaternions and the resulting B. Path Parametrization
acceleration in the heading frame [12]. The relationship
The MPC creates a local path from the global reference
is shown in (10) with the two coef(cid:2)cients, cqx and cqy, trajectory, as an arc curve length parametrized polynomial
assuming that the balance controller tracks the quaternion
" # " # " #" # of order n . The polynomial order should be high enough
reference perfectly. p
toensurecontinuousdifferentiationinposition,velocity,and
acceleration,resultinginasmoothtrajectory.However,there
Hx(cid:127) =(A +A ) HBq1 = 0 cqx HBq1 are no closed-form expressions for the arc curve length
Hy(cid:127) v_q v_qr Hq (cid:0)c 0 Hq of a polynomial of arbitrary degree [14], but it can be
B 2 qy B 2
(10) approximated by several closed-form expressions as shown
where Hq and Hq are the x and y elements of the attitude in [15](cid:150)[17].
B 1 B 2
quaternion de(cid:2)ned in the heading frame, respectively. The A sequence of local reference points are extracted and
off-diagonal terms are zero as a result of the linearization the Euclidean distance between the points serves as a (cid:2)rst
point with no inclination and an assumed perfectly aligned approximation of the arc curve length. The extracted ref-
center of mass [12]. erence points are (cid:2)tted to a polynomial parametrized by
The optimization problem within the MPC is thus subject this Euclidean distance. Finally the polynomial is re(cid:2)ned by
to the following simpli(cid:2)ed shape-accelerated dynamics computingtheapproximatearccurvelengthusingtheclosed-
form expression from [16] and re(cid:2)tting a new polynomial to
d 1 d
dtHBq1 = 2~B!ref,x; dts=s_ rTehgeulraersluyltsipnagcepdaXrapmoienttrsizeexdtrraecfteerdenfcroempatthheXis(cid:2)rgsitvepnolaysnomial.
d 1 d d
dtHBq2 = 2~B!ref,y; dts_ =s(cid:127) dtHx_ =cqxHBq2; np np
d d d Hxref(s)= cx,isi; Hyref(s)= cy,isi (12)
dtHx= Hx_; dt~B!ref,x = ~B!_ref,x dtHy_ =(cid:0)cqyHBq1; i=0 i=0
d Hy = Hy_; d ~B!ref,y = ~B!_ref,y where cx,i and cy,i for i = 0;:::;np de(cid:2)nes the polynomial
dt dt coef(cid:2)cients. Other common parametrizations such as Bezier
(11)
curves [18], splines [19], and the Dubins path [20] can also
where s is the path parametrization variable capturing
be considered. Other examples of path-following MPC can
progress along the path and optimized online using the
be found in [21](cid:150)[23].
corresponding control variable s(cid:127). The MPC problem has
been lifted such as to de(cid:2)ne ~B!_ref,x and ~B!_ref,y as the control C. Obstacle Handling
variables of the MPC instead of ~B!ref,x and ~B!ref,y. Obstaclesareincludedaspositionconstraintswithacircu-
larkeep-ouqtareade(cid:2)nedbyacenterandaradiusfHO ; r g.
IV. CONTROLLERSYNTHESIS i i
The immediate distance to an obstacle, po,i, is computed as
The objective of the shape-accelerated MPC is to follow
a reference path given by a high-level path planner as a po,i = (Hx(cid:0) Hxo,i)2+(Hy(cid:0) Hyo,i)2(cid:0)ri(cid:0)rb (13)
connectedseriesofgeometricreferencepoints,bycomputing
an optimal sequence of balance controller references, ~B!ref,x wdeh(cid:2)enreesrtbh=ec0e:n1temroisftthheeroabdsituascloef,tHhOer.oTbohteaMndPCHxho,ainadnldesHythoe,i
and ~B!ref,y, over a horizon of N samples using the model in obstacles by imposing the followingiconstraints
(11).
po,i (cid:21)(cid:0)(cid:13)o for i=1;:::;no and (cid:13)o (cid:21)0 (14)
A. Trajectory Tracking vs. Path-following
wheren de(cid:2)nesanupperlimitforthenumberofnearbyob-
o
The MPC optimization problem is formulated as a path staclestobeconsideredbytheMPCtomaketheoptimization
following problem given a reference path. In contrast to problem computationally feasible. At each control iteration
trajectory tracking, the reference points are given as a the n number of nearest obstacles are thus extracted and
o
parametrized geometric path instead of a time-series of used as constraints. Imposing only constraints to handle
reference points. This adds time as an extra controllable obstacle avoidance is dangerous since the MPC will end up
degree of freedom [13] enabling the MPC to shape the driving on the constraint boundary. In the case of noise,
accelerationbasedonthecostfunctionratherthanpunishing dynamic variations, etc., the constraints are likely to be
deviationsfromatime-discretizedreferencetrajectory,which voided, resulting in an infeasible optimization problem. An
are likely to happen due to the underactuated dynamics. obstacleavoidancecostsimilartoabarrierfunctionisadded
Since the simpli(cid:2)ed shape-accelerated dynamics presented to the optimization problem to push the robot away from
in (11) does not capture the underactuated dynamics of the the constraint boundary, thereby keeping a distance to the
X
ballbot, e.g., how the ballbot initially has to drive backward obstacles. The obstacle avoidance cost is de(cid:2)ned as
to change its inclination to accelerate forward, the extra
degree of freedom in time will make the controller less no (cid:0)
eobs = ekp( po,i+cp) (15)
susceptible to this lack of dynamics.
i=1
1501
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. where kp and cp are the gain and offset values respectively, eprog, will ensure the progress on the path although it will
thatde(cid:2)nestheexponentialbarrierfunctionusedtopushthe affect the resulting velocity if the weight is in the same
robot away from the obstacles. This formulation is ef(cid:2)cient magnitude as the weight on the velocity error.
for static obstacles and slow dynamic obstacles due to the
feedback from sensors and constant re-computation of the eend =s(cid:0)smax (22)
trajectory. Another type of progress error, eend, pushes the system
towards the end of the (cid:2)tted trajectory by rewarding the
D. Optimization Problem
h i driven distance related to the path parameter, s. Lastly, the
The state vector of the MPC is de(cid:2)ned as constraints are de(cid:2)ned as
T
X = HBq1 HBq2 Hx Hy Hx_ Hy_ s s_ ~B!ref,x ~B!ref,y (16) 0 (cid:20) s (cid:20) smax; s_ (cid:21) 0
sligThotacvoonisdtraininfetavshiioblialittiyo,nsslaactkavhaigrihabcloesst.aTrehiiasdrdeesdulttos ianlltohwe (cid:0)(cid:0)qqlliimm (cid:20)(cid:20) HBHBqq12 (cid:20)(cid:20) qqlliimm;; v (cid:20) vmax+(cid:13)v
following control variables within the MPC (cid:0)!lim (cid:20) ~B!ref,x (cid:20) !lim; po,i (cid:21) (cid:0)(cid:13)o
(cid:13) (cid:21) 0
T (cid:0)!lim (cid:20) ~B!ref,y (cid:20) !lim; v
u= ~B!_ref,x ~B!_ref,y s(cid:127) (cid:13)v (cid:13)q (cid:13)o (17) (cid:0)!_lim (cid:20) ~B!_ref,x (cid:20) !_lim; (cid:13)q (cid:21) 0
(cid:13) (cid:21) 0
where (cid:13)v, (cid:13)q and (cid:13)o are slack variables used in the con- (cid:0)!_lim (cid:20) ~B!_ref,y (cid:20) !_lim; o
straints for the velocity bounds, quaternion bounds, and ob- (23)
stacles avoidance respectively. Note how the control outputs where v is the Euclidean norm of the velocity of the robot.
have been lifted to angular acceleration, ~B!_ref,x, ~B!_ref,y, and The maximum quaternion constraint helps to limit the
pathacceleration,s(cid:127),suchthataccelerationconstraints,which maximum inclination to an angle of (cid:18)lim according to
are closely related to motor torques, can be handled to keep
the torques below saturation. The MPC minimizes the least qlim =sin(0:5(cid:18)lim)+(cid:13)q (24)
squares cost de(cid:2)ned in (18) combining a set of error terms, which in return can be related to a maximum acceleration.
X
state variables and control variables over the horizon. To ensure stability and feasibility terminal constraints
N(cid:0)1 are included. By ensuring that the robot has an upright
J =hT W h + hTW h (18) inclinationattheendofthehorizon,theterminalacceleration
N N N k k
k=0 is zero. Therefore, the quaternion elements Hq and Hq should
B B
where the cost vhectors evaluated at the differient time in- both be zero at the end of the horizon together with the
stances over the horizon is de(cid:2)ned as angular velocity references ~B!ref,x[N] and ~B!ref,y[N] so that
h i the quaternion elements remain at zero. The velocity norm,
T
hk = ec q1;2 !ref !_ref (cid:13)v (cid:13)q (cid:13)o (19) v[N],shouldbekeptbelowthemaximumtoallowonlyslack
within the horizon. Finally, the travelled distance, s[N], is
T
hN = ec q1;2 !ref " # (20) limited to a valid region of the (cid:2)tted reference polynomial
h i as any reference beyond that point would be unmodelled.
with
ec = elon elat evel eprog eobs ; elon =Rz refperr ~B!rHBeqf,1y[[NN]]==00 HBqv2[[NN]](cid:20)=v0max ~B!ref,sx[[NN]](cid:20)=0smax (25)
h i elat h i
The weighting matrices W and W are chosen to be diag-
evel =vhlon(cid:0)vreif; eprog =hs(cid:0)smax i onal with the diagonal elements reNpresenting the individual
q1;2 ="HBq1 HBq2#; !ref = "~B!ref,x ~B!ref,y # weights for cost term.
vlon = Hx_ Hy_ (cid:1)dref; !_ref = ~B!_ref,x ~B!_ref,y V. TESTANDVALIDATION
The proposed path-following MPC has been evaluated in
cos( ref) Hx(cid:0) Hxref(s) simulation and experimentally tested on a real robot. For
dref = ; perr =
sin( ref) Hy(cid:0) Hyref(s) test and veri(cid:2)cation of the balance controller the reader is
 ref =atan2(Hy_ref(s);Hx_ref(s)) (21) referredto[12].ThesimulationwascarriedoutinMATLAB
Simulink 2018b.
where elon is the longitudinal error, elat is the lateral error,
A. Test Scenario
evel is the velocity error, eprog is the progress error, perr is
the position error to the closest point on the path, R ref The robot is given a circular trajectory centred at the
z
is a clockwise rotating 2D rotation matrix of the heading origin of the inertial frame and with a radius of 1m while
reference, vlon is the longitudinal velocity and dref is the di- keeping the initial heading constant and maintaining a de-
rectionvectorofthepathatagivenpoint.Thelinearvelocity sired longitudinal velocity of 0.25m/s. Furthermore, four
reference fHx_ref; Hy_refg is computed from differentiation of circular obstacles are included. The (cid:2)nal MPC parameters
the reference path polynomial. The error on the progress, and the de(cid:2)ned obstacles can be found in Table I and II in
1502
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. 700
600
500
400
300
200
100
0
0 10 20 30 40 50 60 70 80 90 100 110
0.5
0.4
0.3
0.2
0.1
0 10 20 30 40 50 60 70 80 90 100 110
Fig.5. Costfunctionvaluesforboththetestandsimulationcases,together
withthevelocitynormoftherobot.
Fig.3. Trajectorytrackingforbothsimulationandtest.Thearrowsindicate
theprogressionoftherobotalongthetrajectory.Thein(cid:3)atedobstacleshave
difference in the magnitude of the cost functions especially
beenenlargedwiththerobot’sradius.
at the spikes. These differences are likely due to model
inaccuracies and/or uncertainties. For instance, the centre of
2.5
mass of the actual robot is slightly offset compared to the
2 nominal model used in simulation. These issues could be
reduced by e.g., considering robust techniques for the MPC
1.5
or online parameter estimation and compensation.
1
0.5 VI. CONCLUSION
0 This paper presented a novel path-following and obstacle
0 10 20 30 40 50 60 70 80 90 100
avoidancemodelpredictivecontrolapproachforballbalanc-
Fig. 4. Clearance between the robot and all the obstacles in the experi- ingrobotswithunderactuateddynamics.TheMPCutilizeda
mentalrun.
simpli(cid:2)edquaternion-basedmodeloftheballbotwhichmade
real-time implementation and computation feasible although
orientation singularities are generally not a problem with
the Appendix. The MPC is developed as a ROS package
ballbots [12]. The MPC was validated through simulation
which communicates with the embedded microcontroller
and experiments on a real ballbot to verify the approach.
on the robot. For mapping and localization the gmapping
Although there were discrepancies between the simulation
package [24] is used with two single beam SICK LiDAR
and the experiment, where the controller showed better
sensors on the robot. The MPC was run at a sampling
tracking performance in simulation, these differences were
frequency of 10 Hz on an external computer (Intel Core i7-
as expected given the possible uncertainties such as unmod-
6600U, 8 GB RAM) connected to the shared ROS network
elled dynamics and inaccurate model parameters. Therefore,
overWiFi.Thecodeusedforsimulationandimplementation
further testing and tuning of the MPC in real-life scenarios
can be found at [25] and [26] respectively.
including external disturbances would be a natural direction
B. Results for future work.
Theresultsofthepathfollowingexperimentsarecaptured
APPENDIX
inFig.3,alongwithsimulationresultsforthesamescenario.
Furthermore, Fig. 4 shows the clearance of the robot to the
TABLEI
obstacles and Fig. 5 illustrates the cost function values and
MPCPARAMETERSFORTHESIMULATIONANDTEST
velocity norm for both the simulation and the test.
The robot successfully manages to avoid the obstacles Wlon=20000 Wlat=75 Wv=600 Wprog=0 Wq=20
while progressing along the desired circular path. However, W!=10 W!_ =20 W(cid:13)v =9999 W(cid:13)q =9999 W(cid:13)o =9999
Wobs=(cid:14)10 kp=8 (cid:14) cp=0:1(cid:14)5 N=22 f=10Hz
there are slight differences between the simulation and ex- (cid:18)lim=7 !lim=10 =s !_lim=7 =s2 (cid:23)min=0m=s (cid:23)max=3m=s
perimental results. As expected the simulated trajectory of np=8 no=4
the robot shows a better tracking performance. Moreover, it
can be noticed from Fig. 5 that the cost functions matches
TABLEII
in behaviour for both of the cases with three consecutive
spikes representing the situations where the robot gets close OBSTACLEPARAMETERSUSEDFORSIMULATIONANDTEST
to one of the three obstacles along the desired path. The
Obstaclenumber Center[pm] Radius[m]
shift in time can be explained by the velocity plot which 1 ((cid:0)0:5;(cid:0) 3=2) 0:15
shows that the robot drives slower near the obstacles during 2 (0;0) 0:2
3 ((cid:0)0p:2141;1:0075p) 0:12
the real-world test than in simulation. Besides, there is a 4 (1:05= 2;(cid:0)1:05= 2) 0:11
1503
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. REFERENCES
[1] U. Nagarajan, (cid:147)Dynamic Constraint-based Optimal Shape Trajectory
PlannerforShape-AcceleratedUnderactuatedBalancingSystems,(cid:148)in
Robotics:ScienceandSystems2010,2010,p.8.
[2] D.Fox,W.Burgard,andS.Thrun,(cid:147)Thedynamicwindowapproachto
collisionavoidance,(cid:148)IEEERobotics&AutomationMagazine,vol.4,
no.1,pp.23(cid:150)33,1997.
[3] B. Gerkey and K. Konolige, (cid:147)Planning and control in unstructured
terrain,(cid:148)inICRAWorkshoponPathPlanningonCostmaps,2008.
[4] O. Y. Sinyavskiy, J.-B. Passot, and B. Ibarz Gabardos, (cid:147)Parallel
Algorithm for Precise Navigation Using Black-Box Forward Model
andMotionPrimitives,(cid:148)IEEERoboticsandAutomationLetters,vol.4,
no.3,pp.2423(cid:150)2430,jul2019.
[5] C.GwerderandP.Fankhauser,(cid:147)ModelingandControlofaBallbot,(cid:148)
Ph.D.dissertation,ETHZu¤rich,2010.
[6] M. Neunert, F. Farshidian, and J. Buchli, (cid:147)Adaptive Real-time Non-
linearModelPredictiveMotionControl,(cid:148)2014,p.6.
[7] U. Nagarajan and R. Hollis, (cid:147)Shape space planner for shape-
accelerated balancing mobile robots,(cid:148) The International Journal of
RoboticsResearch,vol.32,no.11,pp.1323(cid:150)1341,Sep.2013.
[8] M. Shomin, (cid:147)Navigation and Physical Interaction with Balancing
Robots,(cid:148) PhD Thesis, Carnegie Mellon University, Oct. 2016, cMU-
RI-TR-16-58.
[9] T.Lauwers, G.Kantor, andR.Hollis, (cid:147)Adynamicallystable single-
wheeledmobilerobotwithinversemouse-balldrive,(cid:148)inProceedings
2006 IEEE International Conference on Robotics and Automation,
2006.ICRA2006. Orlando,FL,USA:IEEE,2006,pp.2884(cid:150)2889.
[10] M.KumagaiandT.Ochiai,(cid:147)Developmentofarobotbalancingona
ball,(cid:148) in 2008 International Conference on Control, Automation and
Systems. Seoul,SouthKorea:IEEE,Oct.2008,pp.433(cid:150)438.
[11] P. Dinh Ba, K. Hyung, K. Jaejun, and L. Soon-Geul, (cid:147)Balancing
and Transferring Control of a Ball Segway Using a Double-Loop
Approach,(cid:148) IEEE Control Systems, vol. 38, no. 2, pp. 15(cid:150)37, Apr.
2018.
[12] T.K.Jespersen,(cid:147)Kugle-ModellingandControlofaBall-balancing
robot,(cid:148) Master Thesis, Aalborg University, Aalborg, Denmark, Apr.
2019.
[13] T. Faulwasser, (cid:147)Optimization-based Solutions to Constrained
Trajectory-tracking and Path-following Problems,(cid:148) PhD Thesis,
Otto-von-Guericke-Universita¤tMagdeburg,Oct.2012.
[14] W.College,(cid:147)Arclengthandcurvature.(cid:148)
[15] M. Madi, (cid:147)Closed-form expressions for approximation of arclength
parameterization for be·zier curves,(cid:148) In Int. J. Appl. Math. Comput.
Sci,pp.33(cid:150)41,2004.
[16] M.WalterandA.Fournier,(cid:147)Approximatearclengthparametrization,(cid:148)
p.8,1996.
[17] H. Wang, J. Kearney, and K. Atkinson, (cid:147)Arc-Length Parameterized
SplineCurvesforReal-TimeSimulation,(cid:148)CurveandSurfaceDesign,
vol.Saint-Malo2002,pp.387(cid:150)396,iSBN0-9728482-0-7.
[18] M.S.FloaterandT.Surazhsky,(cid:147)ParameterizationforCurveInterpo-
lation,(cid:148) in Studies in Computational Mathematics. Elsevier, 2006,
vol.12,pp.39(cid:150)54.
[19] K. Atkinson, (cid:147)Modelling a Road Using Spline Interpolation,(cid:148) The
UniversityofIowa,Tech.Rep.,Feb.2002.
[20] S.M. ,(cid:147)DubinsCurves,(cid:148)2006.
[21] A. Liniger, A. Domahidi, and M. Morari, (cid:147)Optimization-Based
Autonomous Racing of 1:43 Scale RC Cars,(cid:148) arXiv e-prints, p.
arXiv:1711.07300,Nov2017.
[22] R. Frezza, A. Beghi, and A. Saccon, (cid:147)Model predictive for path
following with motorcycles: application to the development of the
pilot model for virtual prototyping,(cid:148) in 2004 43rd IEEE Conference
onDecisionandControl(CDC)(IEEECat.No.04CH37601),vol.1,
Dec2004,pp.767(cid:150)772Vol.1.
[23] M. Hauan Arbo, E. Ingar Grłtli, and J. T. Gravdahl, (cid:147)On Model
Predictive Path Following and Trajectory Tracking for Industrial
Robots,(cid:148)arXive-prints,p.arXiv:1703.02279,Mar2017.
[24] G. Grisetti, C. Stachniss, and W. Burgard, (cid:147)Improved techniques for
grid mapping with rao-blackwellized particle (cid:2)lters,(cid:148) IEEE Transac-
tionsonRobotics,vol.23,no.1,pp.34(cid:150)46,Feb2007.
[25] (cid:147)Kugle ROS - repo for ROS related code,(cid:148)
https://github.com/mindThomas/Kugle-ROS.
[26] (cid:147)Kugle MATLAB - repo for MATLAB related code,(cid:148)
https://github.com/mindThomas/Kugle-MATLAB.
1504
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:02:12 UTC from IEEE Xplore.  Restrictions apply. 