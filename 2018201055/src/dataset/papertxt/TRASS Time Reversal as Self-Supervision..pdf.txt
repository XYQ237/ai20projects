2020 IEEE International Conference on Robotics and Automation (ICRA)
31 May - 31 August, 2020. Paris, France
Robust Real-time UAV Replanning Using
Guided Gradient-based Optimization and Topological Paths
Boyu Zhou, Fei Gao, Jie Pan, and Shaojie Shen
Abstract—Gradient-basedtrajectoryoptimization(GTO)has
gained wide popularity for quadrotor trajectory replanning.
However, it suffers from local minima, which is not only
fatal to safety but also unfavorable for smooth navigation. In
this paper, we propose a replanning method based on GTO
addressingthisissuesystematically.Apath-guidedoptimization
(PGO) approach is devised to tackle infeasible local minima,
which improves the replanning success rate signiﬁcantly. A
topological path searching algorithm is developed to capture
a collection of distinct useful paths in 3-D environments, each
of which then guides an independent trajectory optimization. Fig. 1. A set of topologically distinct paths (left). Multiple trajectories
It activates a more comprehensive exploration of the solution generatedwiththeguidanceofdifferentpaths(right).Videodemonstrating
theproposedreplanningmethodinaggressiveﬂightsisavailableathttps:
space and output superior replanned trajectories. Benchmark
//www.youtube.com/watch?v=YcEaFTjs-a0.
evaluation shows that our method outplays state-of-the-art
methods regarding replanning success rate and optimality.
spacearoundtheinitialtrajectoryissearched.Consequently,
Challenging experiments of aggressive autonomous ﬂight are
theso-calledlocaloptimaltrajectoryisusuallyunsatisfactory
presented to demonstrate the robustness of our method. We
will release our implementation as an open-source package1. for smooth and safe ﬂights. Researchers have realized this
critical issue and employed strategies like random restart [1]
I. INTRODUCTION and iterative reﬁnement [5] to relieve it. Nonetheless, the
Unmanned aerial vehicles (UAVs) are gaining popularity problem is not resolved essentially and prohibits GTO to
for many applications such as autonomous inspection, trans- be applied to more challenging scenarios such as aggressive
portation, and photography, in which the UAV is required ﬂight.
to navigate along a global reference trajectory to ﬁnish its In this paper, the local minima problem is addressed
missions. To ensure safety, trajectory replanning is of vital systematically by a new GTO-based replanning method,
importance to cope with previously unknown obstacles. which comprised of a path-guided optimization (PGO), an
Theproblemoftrajectoryreplanninghasbeeninvestigated efﬁcient algorithm to discover topologically distinct paths,
actively. Recent works [1]–[5] reveal that gradient-based and the parallel trajectory optimization guided by the paths
trajectory optimization (GTO), which typically formulates (asdepictedinFig.1).Firstly,weanswerthequestionofhow
trajectory replanning as a non-linear optimization problem infeasible local minima of GTO can be reliably prevented.
that trades off smoothness, safety, and dynamically feasi- The typical reasons for infeasible local minima are investi-
bility, is particularly effective for this problem. It is widely gated.Basedonthem,weproposePGOinwhichageometric
appliedthankstoitsconveniencetodeformaninfeasibletra- path is utilized to guide the optimization effectively so
jectorysegmentintoafeasibleone,withveryhighefﬁciency that the success of replanning is guaranteed. Secondly, we
and low memory requirement. answer how optimality of the replanning can be improved
Despite its advantages, GTO-based replanning is cursed considerably, with only minor computational overhead. We
by the issue of local minima. The issue arises from the propose an efﬁcient sampling-based topological path search-
collisioncostoftheoptimization,whichshouldbeevaluated ing approach to extract a comprehensive set of paths that
accordingtothestructureoftheenvironment.Sincethereare capture the structure of the environment. With the guidance
multiple safe and unsafe regions, this cost is non-convex by ofseveralcarefullyselectedpaths,PGOisinvokedtoexplore
nature.Thisissuecouldcausefatalcrashessinceitfrequently the solution space more thoroughly. It consistently yields
makesthetrajectorygetstuckininfeasiblelocalminimaand better replanning than previous methods, while the total
resultsinreplanningfailure.Besides,italsoleadstothelack computation time is comparable.
of optimality guarantee, as only a small fraction of solution We conduct extensive benchmark comparisons with state-
of-the-art methods and challenging real-world experiments
This work was supported by HKUST-DJI Joint Innovation Laboratory to validate our proposed replanning method. Results show
and HKUST institutional fund. All authors are with the Department of
that it is superior to previous ones in terms of signiﬁcantly
Electronic and Computer Engineering, Hong Kong University of Science
{
and Technology, Hong Kong, China. bzhouai, fgaoaa, jpanai, higher success rate and stronger optimality guarantee, with
}
eeshaojie @ust.hk only slightly longer computational time induced by the
1The open-source code will be released at https://github.
topological path searching. The contributions of this paper
com/HKUST-Aerial-Robotics/Fast-Planner and https://
github.com/HKUST-Aerial-Robotics/TopoTraj are summarized as follows:
978-1-7281-7395-5/20/$31.00 ©2020 IEEE 1208
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. 1) A robust optimization approach for real-time trajectory
replanning named PGO, to boost the success rate of the
replanning.
2) An efﬁcient topological path searching algorithm, and
itsintegrationwiththeproposedPGO,tosearchthesolution
space more thoroughly and yield better replanning.
3) Benchmark comparisons and real-world experiments
that validate the performance of our proposed method. The
source code of our implementation will be released.
(a) (b)
II. RELATEDWORK
Fig.2. Typicalexamplesofoptimizationfailure,whereadjacentpartsof
A. Gradient-based Trajectory Optimization a trajectory are pushed in opposing directions if the trajectory crosses the
”valley”(a)or”ridge”(b)oftheESDF(denotedbyorangedashedlines).
GTOisoneofthemajortrajectorygenerationapproaches, RedarrowsdenotegradientsofESDFandyellowonesaregradientsofthe
which formulates the problem as a non-linear optimization objectivefunction.
that minimizes an objective function. Interest in this method
scenarios. To seek for 3-D homology classes, [12] exploited
was revived recently by [6], which generates discrete-time
thetheoryofelectromagnetismandproposea3-Dhomology
trajectoriesbyminimizingitssmoothnessandcollisioncosts
equivalence relation. However, it requires occupied space to
using covariant gradient descent. [7] has a similar formula-
be decomposed into ”genus 1” obstacles, which is usually
tion, but solves the problem by sampling neighboring candi-
impractical. Besides, capturing only homotopy classes in 3-
dates iteratively. The stochastic sampling strategy partially
D space is insufﬁcient to encode the set of useful paths, as
overcomes the local minima issue but is computationally
indicated in [13], since 3-D homotopic paths may be too
intensive. [1] extended the method to continuous-time poly-
hard to deform into each other. To this end, [13] leverages a
nomial trajectories to avoid differential errors. It also does
visibility deformation roadmap to search for a richer set of
random trajectory perturbation and optimization restart for a
usefulpaths.[14,15]convertmapsbuiltfromSLAMsystems
higher success rate. However, the improvement is insignif-
into sparse graphs representing the topological structure of
icant. [2] improved the success rate by providing a high-
the environments.[13]–[15] focus on globalofﬂine planning
qualityinitialpath,whichisfoundbyaninformedsampling-
andaretootime-consumingforonlineusage.Ourtopological
based path searching. However, it only applies to low-speed
path searching is conceptually closest to [13], but with a
ﬂight. In [3], the trajectory is parameterized as a uniform B-
reinvented algorithm for real-time performance.
spline. It showed that the continuity and locality properties
of B-spline are particularly useful for trajectory replanning. III. PATH-GUIDEDTRAJECTORYOPTIMIZATION
[4] further exploited the convex hull property of B-spline
A. Optimization Failure Analysis
and improve the optimization efﬁciency and robustness by
a large margin. However, given a poor initial trajectory in Previous work [16] showed that failure of GTO is rel-
complex environments, this method still suffers. As a result, evant to unfavorable initialization, i.e., initial paths that
[5] adopts an iterative post-process to improve the practical pass through obstacles in certain ways usually get stuck.
success rate of [4]. By far, local minima still remains a Underlying reason for this phenomenon is illustrated in
challenge, since no method copes with it essentially. In this Fig.2. Typical GTO methods incorporate the gradients of a
paper, we propose PGO, which incorporates a geometric Euclidean signed distance ﬁeld (ESDF) in a collision cost to
path in the optimization. As the path effectually guides push the trajectory out of obstacles. This cost is combined
the optimization to escape from infeasible local minima, with the smoothness and dynamic feasibility cost to form
the planning success rate is guaranteed. Moreover, multiple anobjectivefunction,whosegradientsiterativelydeformthe
distinctpathsproducedbythetopologicalpathsearchingare trajectory into a smooth and safe one. Yet there are some
integratedwiththePGOtoseekforplentifullocallyoptimal ”valleys” or ”ridges” in the ESDF, around which the gradi-
solutions, which ensures higher trajectory quality. entsdiffergreatly.Consequently,ifatrajectoryisincollision
andcrossessuchregions,thegradientsofESDFwillchange
B. Topological Path Planning
abruptly at some points. This can result in gradients of the
There have been works utilizing the idea of topologically objective function pushing different parts of the trajectory in
distinct paths for planning, in which paths belonging to opposing directions and fails the optimization.
different homotopy (homology) [8]–[12] or visibility defor- Normally,such”valleys”and”ridges”,whichcorresponds
mation [13] classes are sought. [8] constructs a variant of to the space that has an identical distance to the surfaces of
probabilistic roadmap (PRM) to capture homotopy classes, nearbyobstacles,aredifﬁculttoavoid,especiallyincomplex
in which path searching and redundant path ﬁltering are environments. Therefore, optimization depending solely on
conducted simultaneously. In contrast, [9, 10] ﬁrstly creates theESDFfailsinevitablyattimes.Tosolvetheproblem,itis
a PRM or Voronoi diagram, after which a homology equiv- essential to introduce extra information that can produce an
alence relation based on complex analysis [11] is adopted to objective function whose gradients consistently deform the
ﬁlter out redundant paths. These methods only apply to 2-D trajectory to the free space.
1209
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. (a) (b) (a) (b)
Fig. 3. The two-phases PGO approach for trajectory replanning. (a) Fig. 4. The proposed replanning framework. a) A trajectory segment
Ageometric guidingpath(orange) attractstheoriginal B-splinetrajectory within the checking horizon (green) collides with an obstacle and triggers
(green)intothefreespace.(b)Thewarmuptrajectoryisfurtheroptimized thetopologicalroadmapgeneration(Sect.IV-B)withinacube.b)Pathsare
intheESDFtoimproveitssmoothnessandclearance. extracted,shortenedandprunedtoguidethePGOinparallel.Theredpath
is shorter than the blue one; however, it leads to a more jerky trajectory
B. Problem Formulation
whichtakessharpturnsnearthestartandendposition.
We propose PGO built upon our previous work [4] that
the warmup trajectory is also so. Even though it is not
represents trajectories as B-splines for more efﬁcient cost
completely collision-free, its major part will be attracted to
evaluation. For a trajectory segment in collision, we repa-
thefreespace.Atthisstage,thegradientsofESDFalongthe
rameter{ize it as a pb deg}ree uniform B-spline with control trajectory vary smoothly, and the gradients of the objective
points Q0,Q1,...,QN . function (green arrows in Fig.3(b)) push the trajectory to
PGO consists of two different phases. The ﬁrst phase
thefreespaceinconsistentdirections.Hence,standardGTO
generatesanintermediatewarmuptrajectory.Asconcluded
methods can be utilized to improve the trajectory.
above,externalinformationshouldbeincludedtoeffectually
In the second phase, we adopt our previous B-spline opti-
deform the trajectory, since solely applying the ESDF could
mization method [4] to further reﬁne the warmup trajectory
be futile. We employ a geometric guiding path to attract
into a smooth, safe, and dynamically feasible one, whose
the initial trajectory to the free space (depicted in Fig. 3(a))
objective function is:
since collision-free paths are readily available from standard
methods like A* and RRT*. In our work, the paths are f =λ f +λ f +λ (f +f ) (4)
p2 2s s 2c c 2d v a
provided by the sampling-based topological path searching
(Sect. IV). The ﬁrst-phase objective function is: fc is the collision cost evaluated on the ESDF, which
grows rapidly if the trajectory gets close to obstacles. f
v
f =λ f +λ f (1) and f penalize infeasible velocity and acceleration. The
p1 1s s 1g g a
formulations of f , f , and f are simpliﬁed based on the
where f is the smoothness cost of the trajectory, while f c v a
s g convex hull property of B-spline, thanks to which it sufﬁces
is the cost to penalize the distance between the guiding path
toconstrainthecontrolpointsoftheB-splinetoensuresafety
and the B-spline trajectory. As in [4], f is designed as a
s and dynamic feasibility, without evaluating expensive line
elastic band cost function2 that simulates the elastic forces
integrals. For brevity, we refer the readers to [4] for detailed
(cid:88)
of a sequence of springs:
formulations.
−
N pb+1(cid:107) − (cid:107) Although PGO has one more step of optimization com-
f = Q 2Q +Q− 2 (2) pared with previous methods, it can generate better trajecto-
s i+1 i i 1
i=pb−1 rieswithinshortertime.Theﬁrst-phasetakesonlynegligible
Because the shape of a B-spline is ﬁnely controlled by its time, but generate a warmup trajectory that is easier to be
controlpoints,weutilizethispropertytosimplifythedesign further reﬁned, which improve the overall efﬁciency.
of f . Each control point Q is assigned with an associated
g i IV. TOPOLOGICALPATHSEARCHING
point G on the guiding path, which is uniformly sampled
i
along the guiding path. Then f is deﬁned as the sum of the Given a geometric guiding path, our PGO method can
g
squared Euclidean distan(cid:88)ce between these point pairs: replan a locally optimal trajectory. However, this trajectory
is not necessarily satisfactory, even with the guidance of the
−
N pb(cid:107) − (cid:107) shortest path, as seen in Fig. 4(b). Actually, it is difﬁcult
f = Q G 2 (3)
g i i to determine the best guiding path, since the paths do not
i=pb contain high order information (velocity, acceleration, etc.),
Notably,itisanunconstrainedquadraticprogrammingprob- and can not completely reﬂect the true motion. Searching
lem, so its optimal solution can be obtained in closed a kinodynamic path [17, 18] may sufﬁce, but it takes ex-
form. It outputs a smooth trajectory in the vicinity of the cessive time to obtain a promising path with boundary state
guidingpath.Sincethepathisalreadycollision-free,usually constraints at the start and end of the replanned trajectory.
For a better solution, a variety of paths is required. We
{ ··· }
oQpp2tibOm−ni1zlye,dQthdNeu−esptuobb+steh1teanobdfouQcnodNnatr−ryoplbst+apt2oeiancrtoesnnsetQreadipenbdts,tQoofepvbtha+leu1a,trtaejethc,etoQsrmyN.o−Qopthpbnb−es2iss., parocpoollseectaiosnamofpldinisgt-ibnacstepdattohpsotlooggicuaidlepatthhesPeaGrcOh.inAgltthooﬁungdh
1210
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. Fig.6. ComparisonbetweenUVD(left)andVD(right).Eachredpoint
on one path is transformed to a point (green) on the other path. Any two
associated points correspond to the same parameter s in UVD, but not in
VD.
(a) The four trajectories are equiva- (b) AnillustrationofUVD.Theblue
lentunderthedeﬁnitionofhomotopy, trajectoryisdistincttothegreenone, Fig. 5(b) gives an example of three trajectories belonging
but represent substantially different butisequivalenttothepurpleone. to two UVD classes. The relation between VD and UVD
motionsofaquadrotor.
is depicted in Fig. 6. Both of them deﬁne a continuous map
Fig.5. Topologyequivalencerelation. betweentwopathsτ (s)andτ (s),inwhichapointonτ (s)
1 2 1
methods [8, 13]–[15] are for this problem, none of them istransformedtoapointonτ (s)throughastraight-line.The
2
runsinreal-timeincomplex3-Denvironments.Weredesign major difference is that for UVD, point τ (s ) is mapped to
1 1
the algorithm carefully to solve this challenging problem in τ (s ) where s =s , while for VD s does not necessarily
2 2 1 2 1
real time. equals s . In concept, UVD is less general and characterizes
2
subsets of VD classes. Practically, it captures slightly more
A. Topology Equivalence Relation
classes of distinct paths than VD, but is far less expensive 3
Although the concept of homotopy is widely used, it for equivalence checking.
∈
captures insufﬁcient useful trajectories in 3-D environments, To test UVD relation, one can uniformly discretize s
as shown in Fig. 5(a). [13] proposes a more useful relation [0,1] to s = i/K,i = 0,1,...,K and check collision for
i
in 3-D space named visibility deformation (VD), but it is linesτ (s )τ (s ).Forthepiece-wisestraightlinepaths(asin
(cid:13)1 i 2(cid:13) i
computationally expensive for equivalence checking. Based Alg. 1(cid:13), Equi(cid:13)valent()), we simply parameterize it uniformly,
(cid:13) (cid:13)
on VD, we deﬁne uniform visibility deformation (UVD), sothatforanysexceptτ(s)isthejoinpointsoftwostraight
whichalsocapturesabundantusefultrajectories,andismore lines, dτ(s) =const.
efﬁcient for equivalence checking. ds
B. Topological Roadmap
G
Algorithm 1: Topological Roadmap Alg. 1 is used to construct a UVD roadmap capturing
1 Initialize() anabundantsetofpathsfromdifferentUVDclasses.Unlike
2 AddGuard(G,s), AddGuard(G,g) standard PRM, which results in many redundant loops, our
3 while t≤t ∧N ≤N do methodgeneratesamorecompactroadmapwhereeachUVD
4 p ←Sammaxple()sample max class contains just one or a few paths (displayed in Fig. 7).
5 gs ←VisibleGuards(G,p ) We introduce two different kinds of graph nodes, namely
6 ifvigs .size()==0 then s guardandconnector,similartotheVisibility-PRM[19].The
7 vAisddGuard(G,p ) guardsareresponsibleforexploringdifferentpartofthefree
s space, and any two guards g and g are not visible to each
8 if gvis.size←()==2 then other (line g g is in collisio1n). Bef2ore the main loop, two
9 path1 ←Path(gvis[0],ps,gvis[1]) guardsarecr1ea2tedatthestartpointsandendpointg.Every
10 dNist←inct True G time a sampled point is invisible to all other guards, a new
11 s Share∈dNNeighbors( ,gvis[0],gvis[1]) guard is created at this point (Line 6-7). To form paths of
12 for each n←s s do theroadmap,connectorsareusedtoconnectdifferentguards
13 path2 Path(gvis[0],ns,gvis[1]) (Line 7-19). When a sampled point is visible to exactly two
14 if Equivalen←t(path1,path2) then guards, a new connector is created, either to connect the
15 distinct False guards to form a topologically distinct connection (Line 19-
16 if Len(path1G)<Len(path2) then 20), or to replace an existing connector to make a shorter
17 Replace( ,ps,ns) path(Line16-17).Limitsoftime(t )orsamplingnumber
max
18 break (N ) are set to terminate the loop.
max
WiththeUVDroadmap,adepth-ﬁrstsearchaugmentedby
19 if distinct then G a visited node list is applied to search for the paths between
20 AddConnector( ,ps,gvis[0],gvis[1]) s and g, similar to [10].
C. Path Shortening & Pruning
As shown in Fig. 7(e), some paths obtained from Alg. 1
Deﬁnition 1. Two trajectories τ (s), τ (s) parameterized
∈ 1 2 may be detoured. Such paths are unfavorable, since in the
by s [0,1] and satisfying τ (0) = τ (0),τ (1) = τ (1),
1 2 1 2
belong to the same uniform visibility deformation class, if
3TotestVDrelation,oneshouldcomputeavisibilitydiagramanddopath
for all s, line τ (s)τ (s) is collision-free. searchingwithinit[13],whichhashighercomplexitythantestingUVD.
1 2
1211
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. (a) (b) (c) (d) (e)
Fig. 7. Generation of the topological roadmap. Red and green nodes represent the guards and connectors respectively. (a)-(c): Guards are added to
occupydifferentregionsofspace,andconnectorsareaddedtoformnewconnectionsbetweentheguards.(d):newconnectorsreplacetheoldones,making
the connections shorter. (e): some of the paths found by the depth-ﬁrst search. Both the red and orange paths belong to the same UVD class, while the
pinkpathistheonlymemberofitsUVDclass.
V. REAL-TIMETOPOLOGICALTRAJECTORY
REPLANNING
Algorithms in Sect. IV output a fruitful set of paths
that can guide trajectory optimization. We integrate them
appropriately with the PGO for real-time replanning, as
illustratedinFig.4.Duringtheﬂight,asegmentoftheglobal
trajectory within a speciﬁc horizon is checked periodically
forsafety.Oncecollisionsaredetected,topologicalroadmap
construction is triggered within a cube, which is determined
bythestartandendpositionofthesegment,and(r ,r ,r )
x y z
Fig. 8. A detoured and long path (green line) is shortened. For each specifying the size of the cube. Paths extracted from the
discretizedpointontheoriginalpath(greenpoint),itsvisibilitytothelast roadmap are shortened and pruned (Sect. IV-C), after which
waypoint of the shortened path (red points) is checked. The center points
each of the paths invokes an independent PGO.
oftheblockingvoxel(dashed)arepushedandappendedasnewwaypoints.
Noticeably, the number of alternative UVD classes grows
ﬁrst phase of PGO it can deform a trajectory excessively exponentially with the number of obstacles. So in complex
and make it unsmooth. Hence, Alg. 2 ﬁnd a topologically environments it may be intractable to optimize for all paths.
equivalent shortcut path P for each P found by the depth- Forthisreason,weonlyselecttheﬁrstK shortestpaths.
s r max
ﬁrst search (illustrated in Fig. 8). The algorithm uniformly Paths more than r times longer than the shortest one
max
Discretizes P to a set of points P . In each iteration, if a are also excluded. Such strategies bound the complexity and
r d
point p in P is invisible from the last point in P (Line 3, does not lead to the missing of potential optimality, since
d d s
4), the center of the ﬁrst occupied voxel blocking the view verylongpathsareunlikelytoproducetheoptimaltrajectory.
of P .back() is found (Line 5). This point is then pushed Practically we ﬁnd K =5 is sufﬁcient.
s max
away from obstacles in the direction orthogonal to l and
d
coplanar to the ESDF gradient at p (Line 6), after which it VI. RESULTS
b
is appended to P (Line 7). The process continues until the
s A. Benchmark Comparisons
last point is reached.
Although in Alg. 1, redundant connection between two We ﬁrst compare our local replanning method with two
guards are avoided, there may exist a small number of state-of-the-art methods Ewok [3] and TRR [5]. Both meth-
redundant paths between s and g (Fig. 7(e)). To completely odsparameterizelocaltrajectoryasuniformB-splineanduse
exclude repeated ones, we check the equivalence between GTO to do replanning efﬁciently. TRR further exploits the
any two paths and only preserve topologically distinct ones. convex hull property of B-spline to simplify the cost func-
tion.Wecompareallmethodsinrandommapswith3differ-
ent densities of obstacles, with 500 random replanning tasks
Algorithm 2: Finding a shortcut path P for P .
s r for each density, as shown in Fig. 9. For fair comparisons,
← ←{ }
1 P Discretize(P ), P P .front() weinitializeallmethodswiththesamereferencetrajectories
d ∈ r s d
2 for each p P do computed by [20]. Besides, we limit the optimization time
← d d
3 ld¬ Line(Ps.back(),pd) of Ewok and TRR to 15 ms according to their settings in
4 if LineVisib(l ) then theoriginalwork.Forours,thetimefortopologicalroadmap
← d
5 pb ←BlockPoint(ld) construction 4 and trajectory optimization is limited to 3 ms
6 p PushAwayObs(p ,l )
o b d
7 Ps.push back(po) 4The computation time of topological path searching can not be deter-
minedexactly,becausetimeforpathshorteningandpruningvariesslightly
8 P .push back(P .back()) in different environments. So we determine the roadmap sampling time
s d
empiricallyaccordingtothedesiredtimebudget.
1212
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. Fig.9. Benchmarkcomparisonsoftheproposedmethod(red)withEwok Fig. 10. Autonomous ﬂight experiments in indoor (top) and outdoor
[3](green)andTRR[5](blue)inenvironmentsofdifferentcomplexities. (buttom)environments.Asetoftopologicallydistinctcandidatetrajectories
aregeneratedtoavoidobstacleswhilekeepingthedroneclosetotheglobal
TABLEI
referencetrajectory(black).Thebestone(red)isselectedandexecuted.
COMPARISONSOFREPLANNINGMETHODS.
Comp. Success Smoothness
Density Method
time(ms) rate(%) (m2/s5)
Ewok[3] 15.00 88.0 9.0151
Low TRR[5] 15.00 90.4 6.5102
Proposed 5.75+10.00 100.0 5.4357
Ewok[3] 15.00 81.4 9.5042
Medium TRR[5] 15.00 85.6 8.3942
Proposed 6.83+10.00 100.0 6.7833 Fig.11. Indoorandoutdoorautonomousaggressiveﬂights.
Ewok[3] 15.00 78.8 9.4845
High TRR[5] 15.00 82.6 9.1762 The experiments are conducted in complex indoor and
Proposed 7.05+10.00 100.0 7.7038 outdoor scenes. In each experiment, a straight-line global
referencetrajectoryisﬁrstgeneratedusingtheapproach[20].
and 10 ms 5. We check for collisions and smoothness of
During the ﬂight, local trajectories within a horizon of 9 m
replanned trajectories.
are replanned to avoid previously unknown obstacles while
As is shown in Tab. I, our method outperforms both
keeping the drone close to the global trajectory. Aggressive
benchmarkmethodsintermsofsuccessrateandsmoothness.
autonomous ﬂights with very limited sensing range in both
Our method successfully ﬁnds feasible replanning in all
scenes are quite challenging, since safe trajectories should
environments,whilethesuccessratesofothersdecreasewith
be generated frequently within extremely short time to cope
increasing complexity of environments. Also, our method
withsuddenandunexpectedobstacles.Thelocaltrajectories,
generatesthesmoothesttrajectories.Ouroverallcomputation
local maps and velocity proﬁles of one indoor and outdoor
is only slightly longer, in which 5-7 ms is spent on topo-
ﬂightsareshowninFig.10.Wereferthereaderstothevideo
logical path searching and 10ms on parallel optimization. It
attachment for more details.
is notable that although less time is spent on optimization,
the generated trajectories are better. The reasons are that
VII. CONCLUSIONS
the proposed two-phases optimization (Sect. III-B) is easier
to converge, and that the parallel optimization (Sect. V) In this paper, we propose a robust trajectory replanning
explores the solution space more thoroughly. method for autonomous quadrotor navigation. It overcomes
local minima with the path-guided optimization, topological
B. Aggressive Autonomous Flights
pathsearchingandparalleltrajectoryoptimization.Extensive
We conducted aggressive autonomous ﬂight experiments benchmark comparisons and aggressive autonomous ﬂight
tovalidatetherobustnessofourreplanningmethod.Theself- experiments are conducted to validate the robustness of our
developed drone is localized by a robust visual-inertial state method.
estimator [21]. A local mapping framework [22] fuses the
Currently, the performance of topological path searching
depth images from a stereo camera into a volumetric occu-
is satisfactory, but its completeness is not analyzed in detail.
pancy map and maintains an ESDF for online replanning.
Also, we are not completely certain about the theoretical
We use a geometric controller [23] for trajectory tracking.
optimality of the replanning method. In the future, we
All modules run on an Intel Core i7-8550U CPU.
will investigate these problems. We also plan to extend
our method to cope with not only static but also dynamic
5Run-time efﬁciency is critical for online replanning, therefore we give
shortcomputationtimetotesttheperformance. obstacles to enable safe navigation in more complex scenes.
1213
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. REFERENCES [12] S. Bhattacharya, M. Likhachev, and V. Kumar, “Topological con-
straintsinsearch-basedrobotpathplanning,”Auton.Robots,vol.33,
[1] H. Oleynikova, M. Burri, Z. Taylor, J. Nieto, R. Siegwart, and no.3,pp.273–290,2012.
E.Galceran,“Continuous-timetrajectoryoptimizationforonlineuav [13] L.JailletandT.Sime´on,“Pathdeformationroadmaps:Compactgraphs
replanning,”inProc.oftheIEEE/RSJIntl.Conf.onIntell.Robotsand with useful cycles for motion planning,” Intl. J. Robot. Research
Syst.(IROS),Daejeon,Korea,Oct.2016,pp.5332–5339. (IJRR),vol.27,no.11-12,pp.1175–1188,2008.
[2] F. Gao, Y. Lin, and S. Shen, “Gradient-based online safe trajectory [14] H. Oleynikova, Z. Taylor, R. Siegwart, and J. Nieto, “Sparse 3d
generationforquadrotorﬂightincomplexenvironments,”inProc.of topologicalgraphsformicro-aerialvehicleplanning,”inProc.ofthe
theIEEE/RSJIntl.Conf.onIntell.RobotsandSyst.(IROS),Sept2017, IEEE/RSJIntl.Conf.onIntell.RobotsandSyst.(IROS). IEEE,2018,
pp.3681–3688. pp.1–9.
[3] V. Usenko, L. von Stumberg, A. Pangercic, and D. Cremers, “Real- [15] F.Blochliger,M.Fehr,M.Dymczyk,T.Schneider,andR.Siegwart,
timetrajectoryreplanningformavsusinguniformb-splinesanda3d “Topomap:Topologicalmappingandnavigationbasedonvisualslam
circularbuffer,”inProc.oftheIEEE/RSJIntl.Conf.onIntell.Robots maps,”inProc.oftheIEEEIntl.Conf.onRobot.andAutom.(ICRA).
andSyst.(IROS). IEEE,2017,pp.215–222. IEEE,2018,pp.1–9.
[4] B.Zhou,F.Gao,L.Wang,C.Liu,andS.Shen,“Robustandefﬁcient [16] J.Schulman,Y.Duan,J.Ho,A.Lee,I.Awwal,H.Bradlow,J.Pan,
quadrotor trajectory generation for fast autonomous ﬂight,” IEEE S.Patil,K.Goldberg,andP.Abbeel,“Motionplanningwithsequential
RoboticsandAutomationLetters,vol.4,no.4,pp.3529–3536,2019. convex optimization and convex collision checking,” Intl. J. Robot.
[5] F.Gao,L.Wang,B.Zhou,L.Han,J.Pan,andS.Shen,“Teach-repeat- Research(IJRR),vol.33,no.9,pp.1251–1270,2014.
replan:Acompleteandrobustsystemforaggressiveﬂightincomplex [17] W. Ding, W. Gao, K. Wang, and S. Shen, “Trajectory replanning
environments,”arXivpreprintarXiv:1907.00520,2019. forquadrotorsusingkinodynamicsearchandelasticoptimization,”in
[6] M.Zucker,N.Ratliff,A.D.Dragan,M.Pivtoraiko,M.Klingensmith, Proc.oftheIEEEIntl.Conf.onRobot.andAutom.(ICRA). IEEE,
C.M.Dellin,J.A.Bagnell,andS.S.Srinivasa,“Chomp:Covariant 2018,pp.7595–7602.
hamiltonianoptimizationformotionplanning,”Intl.J.Robot.Research [18] S.Liu,N.Atanasov,K.Mohta,andV.Kumar,“Search-basedmotion
(IJRR),vol.32,no.9-10,pp.1164–1193,2013. planningforquadrotorsusinglinearquadraticminimumtimecontrol,”
[7] M. Kalakrishnan, S. Chitta, E. Theodorou, P. Pastor, and S. Schaal, inProc.oftheIEEE/RSJIntl.Conf.onIntell.RobotsandSyst.(IROS),
“Stomp: Stochastic trajectory optimization for motion planning,” in Sept2017,pp.2872–2879.
Proc.oftheIEEEIntl.Conf.onRobot.andAutom.(ICRA). IEEE, [19] T. Sime´on, J.-P. Laumond, and C. Nissoux, “Visibility-based proba-
2011,pp.4569–4574. bilistic roadmaps for motion planning,” Advanced Robotics, vol. 14,
[8] E.Schmitzberger,J.-L.Bouchet,M.Dufaut,D.Wolf,andR.Husson, no.6,pp.477–493,2000.
“Captureofhomotopyclasseswithprobabilisticroadmap,”inProc. [20] C. Richter, A. Bry, and N. Roy, “Polynomial trajectory planning for
oftheIEEE/RSJIntl.Conf.onIntell.RobotsandSyst.(IROS),vol.3. aggressivequadrotorﬂightindenseindoorenvironments,”inProc.of
IEEE,2002,pp.2317–2322. theIntl.Sym.ofRobot.Research(ISRR),Dec.2013,pp.649–666.
[9] C.Ro¨smann,F.Hoffmann,andT.Bertram,“Planningofmultiplerobot [21] T. Qin, P. Li, and S. Shen, “Vins-mono: A robust and versatile
trajectories in distinctive topologies,” in Proc. of the Euro. Conf. on monocularvisual-inertialstateestimator,”IEEETrans.Robot.(TRO),
MobileRobot. IEEE,2015,pp.1–6. vol.34,no.4,pp.1004–1020,2018.
[10] ——, “Integrated online trajectory planning and optimization in dis- [22] L. Han, F. Gao, B. Zhou, and S. Shen, “Fiesta: Fast incremental
tinctivetopologies,”Robot.Auton.Syst.(RAS),vol.88,pp.142–153, euclideandistanceﬁeldsforonlinemotionplanningofaerialrobots,”
2017. arXivpreprintarXiv:1903.02144,2019.
[11] S. Bhattacharya, “Search-based path planning with homotopy class [23] T.Lee,M.Leoky,andN.H.McClamroch,“Geometrictrackingcontrol
constraints,” in Twenty-Fourth AAAI Conference on Artiﬁcial Intelli- of a quadrotor uav on se (3),” in Proc. of the IEEE Control and
gence,2010. DecisionConf.(CDC),Atlanta,GA,Dec.2010,pp.5420–5425.
1214
Authorized licensed use limited to: Carleton University. Downloaded on September 21,2020 at 05:56:13 UTC from IEEE Xplore.  Restrictions apply. 