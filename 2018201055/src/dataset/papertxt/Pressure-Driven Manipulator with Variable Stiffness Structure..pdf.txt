2020 IEEE International Conference on Robotics and Automation (ICRA)
31 May - 31 August, 2020. Paris, France
Improved C-Space Exploration and Path Planning for Robotic
Manipulators Using Distance Information
Bakir Lacevic and Dinko Osmankovic
Abstract—WepresentasimplemethodtoquicklyexploreC-
spacesofroboticmanipulatorsandthusfacilitatepathplanning.
The method is based on a novel geometrical structure called
generalized bur. It is a star-like tree, rooted at a given point
in free C-space, with an arbitrary number of guaranteed
collision-free edges computed using distance information from
theworkspaceandsimpleforwardkinematics.Generalizedbur
captures large portions of free C-space, enabling accelerated
exploration.Theworkspaceisassumedtobedecomposableinto
a ﬁnite set of (possibly overlapping) convex obstacles. When
pluggedinasuitableRRT-likeplanningalgorithm,generalized
bursenablesigniﬁcantperformanceimprovements,whileatthe
same time enabling exact collision-free paths.
I. INTRODUCTION
The original sampling-basedalgorithms [1], [2], [3], with
a variety of follow-ups (e.g., [4], [5], [6]), typically use
Fig.1:C-spacewithobstaclesfora3DOFplanarrobot.Threecollision-free
collision checkingto validatelocal pathsup to a givenreso-
structures obtained using a single distance query: bubble of free C-space
lution.Freelocalpathsareassembledintoa graphcapturing (blue)[11],buroffreeC-space(black)[18],andageneralizedbur(green).
the connectivity of free C-space (C ) to ﬁnd collision-free The workspace is depicted in the top-right, while the zoomed versions of
f bubbleandburareshowninthebottomright.
paths. More reliable path veriﬁcation is based on methods
suchascontinuouscollisiondetection[7],[8],enlargedrobot
models[9],anddistancequeries[10],[11],[9],[8],[12].An
interesting concept of tiling roadmaps to facilitate planning
for free-ﬂying multi-link robots can be found in [13], while
in [14] authors propose rapidly exploring random vines to
tackle the problem of narrow passages.
Distance query has facilitated certain aspects of path
planning. Bubbles of free C-space [11] are used in [10] Fig. 2: C-space coverage after 50ms: simple RRT [2], bur tree [18], and
to compute RRT extensions. In [15], the distance measure proposedgeneralized burtree(seeSectionIV)
is used to grow a volumetric tree that biases the sampling
process. The method from [16] uses distance information obstacles. In case the latter does not hold, a variety of
to decimate subsequent collision checks within a safety methodsare available for practical convexdecompositionof
certiﬁcates framework. The recent paper [17] uses distance meshesandpolyhedra,e.g.,[19],[20],[21].Thecontribution
as a cost function within the roadmap-based planning in highlights are as follows.
unknown environments. In [18], the structure called bur of The deﬁnition of the generalized bur—it is a signiﬁ-
•
free C-space is used within multi-directionalRRT-like algo- cantlyenlargedversionoftheoriginalbur(Fig.1)com-
rithm to accelerate the exploration of C . The bur provides putable using the same amount of input information.
f
signiﬁcantly larger portion of Cf when compared with the • A plain path planning algorithm—when plugged in a
bubble, while using the same distance query. The proposed RRT-likealgorithm,generalizedbursprovidesigniﬁcant
rapidlyexploringburtree(RBT)outperformedbothclassical performance improvement w.r.t. related methods (Fig.
RRT and related algorithms that use distance information. 2). The algorithm is simple in structure and requires
This work reveals the underlying distance information only basic procedures: distance query, nearest neigh-
to further expand the knowledge about C . The following bors and forward kinematics. No heavy preprocessing,
f
assumptionshave been made: i) the robotbelongsto a class learning nor complicated data structures are necessary.
of ﬁxed-base manipulators with rotational joints, and ii) The paper is organized as follows. Section II recollects
the environment is a set of (possibly overlapping) convex the bubbles and burs of free C-space. The generalized bur
is deﬁned in Section III, while the planning algorithm is
Authors are with the Faculty of Electrical Engineering,
describedinSectionIV.SectionVbringsthevalidationstudy
University of Sarajevo, 71000 Sarajevo, Bosnia and Herzegovina.
while the ﬁnal remarks are given in Section VI.
{bakir.lacevic,dinko.osmankovic}@etf.unsa.ba
978-1-7281-7395-5/20/$31.00 ©2020 IEEE 1176
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. Moreover, the feature of convexity is lost in the general
case. However, it turns out that the border of the complete
bubblecanbesampledefﬁcientlywiththeguaranteethatline
segments, which join q with the samples on the border, are
collision-free. This follows from the fact that the complete
B(q) bubbleisstar-convexbydeﬁnition.Theresultingstructureis
denoted as the bur of free C-space (see Fig. 3). The formal
CB(q) deﬁnition of the bur is [18]:
Bur(q) Deﬁnition 2: Let Qe = {qe1,...,qeN} be the set of N
pointsinC-spacesuchthatq 6=q.TheburoffreeC-space
ei
at the conﬁguration q, w.r.t. Q is given by:
Fig.3:Bubble, complete bubbleandburfor2and3DOFplanarrobots e
II. BACKGROUND -BUBBLES AND BURS Bur(q,Q ,d )=CB(q,d )∩(cid:8)qq ,...,qq (cid:9). (4)
e c c e1 eN
Bubblesof free C-space are proposedin [11]. The bubble Here,Q is the setof N points(usuallyrandom)in C-space
e
B(q,d ) is the volume of free C-space around the conﬁgu- that are far enough from the conﬁguration q, i.e., do not
c
ration q. Its computation requires the minimum workspace belong to the complete bubble CB(q,dc). This is achieved
distance d between the robot and set of obstacles. For a bysettingalargevalueofδ (seeAlgorithm2inSectionIV).
c
manipulator with n revolute joints, it is deﬁned as [11]: The computation of a bur can be decomposed into com-
putationof individualspines (rays).It reducesto ﬁnding the
B(q,dc)=ny(cid:12)(cid:12)(cid:12) Pni=1ri|yi−qi|≤dco. (1) secondendpointofthespine,whichisfurtherequivalentwith
the solution to a following problem. Given a current robot
The weight r is the radius of the cylinder coaxial with i-th
joint. This cyilinder has to enclose all the links starting from conﬁgurationq,adistancedc,andaremoteconﬁgurationqe,
i-th joint to the end-effector. moveas far as possible along the line segmentqqe, starting
The expression Pn r |y −q | is a conservative upper from q, until some pointon the robotgets displacedexactly
bound on the displacei=m1enit ofi anyipoint on the manipulator by dc. If this does not occur before reaching qe, then the
when the conﬁguration changes from q = (q ...q )T to conﬁguration qe can be declared as the second endpoint of
1 n the spine. This approach may resemble the exact collision
y = (y ...y )T. Changing the conﬁguration from q to an
1 n checking proposed in [22], [23] and recently revisited in
arbitraryconﬁgurationywithinabubblemeansthatnopoint
[24]. However, said methods validate the existing candidate
on the robot moves more than d , which guarantees that
c for a local path, whereas we aim at local path construction
no collision occurs. From (1), it follows that bubbles are
without invoking distance query more than once. Formally,
diamond-shaped (see Fig. 3 for a 2D case). It was hinted
in [11] that the computation of bubbles using (1) may be the second endpoint of the spine q∗ can be deﬁned as:
unnecessarily conservative. In that regard, the method to q∗(q,q )= argmax ky−qk. (5)
e
construct larger local volumes of free C-space based on the y∈qqe
same distance informationwas proposedin [18]. Firstly, the ρR(z,q)<dc,∀z∈qy
complete bubble of free C-space is deﬁned [18]: The metric ρ can be reformulated as [18]:
Deﬁnition 1: Let q ∈ C , and let d be the minimum
f c ρ (q ,q )=max kf (q )−f (q )k, (6)
distance of the robot R at the conﬁguration q to a set of R 1 2 i pi 1 pi 2
workspace obstacles. The complete bubble of free C-space, where f (z) denotes the workspace Cartesian coordinates
pi
w.r.t. conﬁguration q, is the set: of the i-th link’s distal point. Thus, the metric ρ can be
R
obtained by simply applying forward kinematics. Observing
CB(q,dc)=nx∈Cf (cid:12)(cid:12)ρR(q,y)<dc, ∀y∈qxo, (2) the parameterization of the line segment qq given by
(cid:12) e
where qx is the line segment with endpoints q and x. q(t)=q+t(q −q), t∈[0,1], (7)
e
The metric ρ (q ,q ) used above is deﬁned as:
R 1 2
it has been shown in [18] that the value of t∗, which
ρR(q1,q2)=maxp∈Rkfp(q1)−fp(q2)k, (3) correspondsto the endpointof the spine q∗ can be obtained
as the limit of the following sequence:
wheref (z)standsfortheCartesiancoordinatesofthepoint
p
p, on the robot R, which is at the conﬁguration z∈C. t =t + ϕ(tk) (1−t ), (8)
The complete bubble CB(q,d ) is a superset of the orig- k+1 k Pni=1ri(tk)|qei−qki| k
c
inal bubble B(q,dc), since the weighted L1 metric used in where t0 = 0, ri(tk) are the radii of enclosing cylinders
(1) is more conservative than ρR. Fig. 3 depicts a bubble when the robot is at the conﬁguration qk =q(tk) and
and a completebubble for 2 DOF and 3 DOF planar robots.
ϕ(t)=d −ρ (q,q+t(q −q)). (9)
The exact computation of the complete bubble is hard and c R e
practically impossible for robots with more than 2 DOFs Itturnsoutthatthesequence(8)convergesfastanditusually
[18]. For instance, the complete bubble for 3 DOF robot takes less than ﬁve iterationsto reach a close approximation
in Fig. 3 is obtained via exhaustive numerical computation. oft∗,i.e.,q∗ =q(t∗).Notethatalltheingredientsnecessary
1177
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. to conduct a single iteration (radii r (t ) and the function
i k
ϕ(t )) are easily obtained by performing a single forward
k
kinematics computation at the conﬁguration q =q(t ).
k k
III. BEYOND COMPLETE BUBBLES AND BURS
A natural question arises whether the information about
the free C-space can be enriched in terms of expanding
the limits of a complete bubble (or a bur). An intuitive
approach is to propagate the existing complete bubble by
computing new complete bubbles around the conﬁguration
points that belong to the border of the original complete
bubble. Thus, an enlarged volume of free C-space would
be obtained. The border of such enlarged structure can
be further propagated in a similar fashion. Clearly, such Fig.4:LinesegmentPQandaworldobstacle WOi
structure would not bring much practical signiﬁcance for result in a slight loss of generalized bur size. However,
the following reasons. Firstly, the original complete bubble the resulting “trimmed” structure (denoted in the sequel by
is extremely hard to compute, even for simple kinematic GBur (q,Q ))isingeneralstillsubstantiallylargerthanthe
k e
chains with few degrees of freedom. Secondly, even if it startingbur.ThebottomlineisthattheGBur (q,Q )ofan
k e
wasavailable,thefurtherpropagationoffreeC-spacewould arbitraryorderkandwithanarbitrarynumberofspines(i.e.,
require an inﬁnite number of distance queries. the cardinality of Q ) can be obtained using only a single
e
Ontheotherhand,thestructureobtainedbythedescribed distance query(necessaryto computethe starting bur)and a
thought experiment inherits the star-convexity feature from limited number of forward kinematics computations.
thecompletebubble.Hence,itcallsforanattempttoperform Inthesequel,wedescribetheprocedureofcomputingthe
a discrete radial representation, in a similar fashion as the underestimationd(y )ofthetermd(y ).We assumethe
i,k i,k
deﬁnition of bur was motivated by the aim of reaching the environment is represented by a set of m convex obstacles
borderofthecompletebubble(seeDeﬁnition2).Tothisend, WO = {WO ,...,WO }, and we assume the distance
1 m
we deﬁne the structure called the generalized bur. query returns mn distances w.r.t. n robot links and m
Deﬁnition 3: Let Q = {q ,...,q } be the set of N obstacles. It may appear that thus we actually have mn
pointsinC-spacesuchethatq e16=q.TheeNgeneralizedbur(of distance queries instead of a single one. However, it turns
order k+1) is given by theefiollowing recursive sequence: out that the time necessary to obtain these mn distances is
only marginally larger than the time required to compute a
GBur (q,Q ,d(q))=Bur(q,Q ,d(q)),
0 e e single distance between the robot and the set of obstacles
GBurk+1(q,Qe,d(q))=GBurk(q,Qe,d(q)) (10) (in case both robot and the set of obstacles are represented
(cid:26)N (cid:27)
by single collision objects - see details of RBT-CONNECT
S S [y q TCB(y ,d(y ))] ,
i,k ei i,k i,k
i=1 implementation in section V).
where k ∈ N∪{0} and conﬁgurations y ,y ,...,y We ﬁrst focus on the relationship between a single link
1,k 2,k N,k
denote the endpoints of GBur (q,Q ,d(q)). and a single obstacle (Fig. 4). For now, the link is observed
k e
In other words, to obtain the generalized bur as a line segment, though the approach can easily tackle
GBur1(q,Qe,d(q)), each spine qyj,0, j = 1,2,...,N, more complexgeometries. Let dij be the minimum distance
of the starting bur Bur(q,Q ,d(q)) is further extended betweentherobot’sj-thlinkdenotedbyPQandtheobstacle
e
from its endpoint yj,0 in the same direction until it reaches WOi. Let N and A be the pair ofclosest pointsthatbelong
the border of the complete bubble deﬁned around the said to the obstacle and link respectively. If such pair is not
endpoint. By deﬁnitions of bur and complete bubble, this unique, we pick an arbitrary one. The plane A at point
ij
extra length equals the corresponding spine of the bur N isperpendiculartothesegmentNA.Thisplaneseparates
computed at yj,0. The process can be repeated for each the workspace into two halfspaces: HSij1 and HSij2. The
spine and for arbitrarily many times. followingtheorem(seeAppendixforaproof)providessome
Though generalized bur GBur (q,Q ,d(q)) can be usefulinsightintorelativepositionbetweenthelinkPQ,the
k e
computed for an arbitrary k ∈ N, it may still be of plane Aij and the convex obstacle WOi.
questionable practical signiﬁcance. Namely, to compute Theorem 1: Let S be the arbitrary point on the link PQ.
GBur (q,Q ,d(q)), additional kN distance queries need Then, the following holds:
k e
to be performed, which may turn out to be too expensive.
ρ(S,WO )≥ρ(S,A )≥d , (11)
In this regard, we design the procedure that substantially i ij ij
alleviates the computational cost of obtaining generalized where ρ(X,Y) is the minimum distance between X and Y.
burs. This procedureis based on replacingthe distance term This implies that the plane A separates the link PQ from
ij
d(y ) from (10) with a useful underestimation that can the obstacle WO with PQ belonging to halfspace HS
i,k i ij1
be obtained using only simple algebra and, most impor- withtheclearancemargind .Ontheotherhand,theobstacle
ij
tantly, without invoking actual distance query. This may WO belongs to halfspace HS .
i ij2
1178
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. Assume that the position of the link PQ is implied by Algorithm 1 GENERALIZED_BUR(q,Qe,k)
the conﬁgurationq. Then, Bur(q,Qe,dc) can be computed 1: [dij,Aij]←DISTANCE_QUERY(q,WO);
whered ≤d istheminimumdistancerobot-obstacles.Let 2: dc←mini,jdi,j;
yl,0 be cthe enijdpoint of l-th spine (l ∈ {1,...,N}) of the 34:: GforBlu=r←1tBouNr(dqo,Qe,dc); ⊲Initialize⊲GABlludrirteoctoirodnisn—arsypiBnuesr
burBur(q,Q ,d )=GBur (q,Q ,d ).Iftherobotmoves 5: forp=0tok−1do ⊲Allextensions inonedirection
from q to yl,0e alcong the spi0ne qyel,0,cthe link PQ will be 67:: ydl←,p←minEjN(cid:8)DmPOinIiN(cid:8)Tρ(G(cid:0)LBINuKr,jl()y;l,p),Aij(cid:1)(cid:9)(cid:9);
relocatedtoanotherpositionP1Q1 (Fig.4).Basedonproven 8: yl,pyl,p+1=yl,pqelTCB(cid:0)yl,p,d(cid:1);
bur properties [18], an endpoint (e.g., point Q) of the link 9: GBur←GBurSyl,pyl,p+1;
PQ will be movedfrom its starting position by the distance 10: return GBur
d ≤ d ≤ d , while all other link points are moved by
Q c ij
distance that is less or equal d . According to Theorem 1,
Q 3 3
the link P1Q1 remains in the halfspace HSij1, and it holds 4 2
that ρ(cid:0)P Q ,WO (cid:1) ≥ ρ(cid:0)P Q ,A (cid:1) ≥ 0. Thus, instead
1 1 i 1 1 ij
of invoking the distance query to compute ρ(cid:0)P Q ,WO (cid:1), 1
1 1 i
one may use the underestimation:
d (y )≡ρ(cid:0)P Q ,A (cid:1)= min ρ(X,A ), (12)
ij l,0 1 1 ij ij
X∈{P1,Q1}
which reduces to trivial algebra: point-to-plane distance 2
computation.Thisresultcanbegeneralizedto tackleatleast
two more complex link geometries. The ﬁrst case is the 4
capsule–aMinkowskisum ofthe segmentand a sphere.The
capsule may be observedas a conservative cover of the real
link.In this case, the distancefromplane isobtainedsimply
1
by subtracting the sphere radius from the result computed
by (12). Alternative representation is the convex hull of the
real link. The distance is then estimated in a similar way as
Fig. 5: Generalized burs of order 20 that correspond to four dif-
in (12), with the minimization performed over all the hull’s ferent conﬁgurations of 2 DOF planar manipulator. The starting bur
vertices.Thesimplest,yetthemostconservativeapproachis GBur0(q,Qe) = Bur(q,Qe) is colored black while the propagation
to use the oriented bounding box (OBB) of the link. to GBurk(q,Qe), k = 1,...,20 is colored green. The workspace is
depicted intheupperleftcorner.
Finally,inordertocontinuetheextensionofthel-thspine
ofBur(q,Qe,dc)=GBur0(q,Qe,dc)towardsqel,theun- the proposed method with clear indication of substantially
derestimationd(yl,0)ofthetermd(yl,0)from(10)ischosen larger area of free C-space covered.
as the minimum value of d (y ) over all the obstacles
ij l,0
WO (or more precisely planes A ), i = 1,2,...,m and IV. PATH PLANNING ALGORITHM
i ij
all the links j =1,2,...,n, i.e., The algorithm is a straightforward modiﬁcation of RRT.
Instead of performing a single extension from the nearest
d(y )=min (cid:8)min (cid:8)d (y )(cid:9)(cid:9). (13)
l,0 j i ij l,0 neighbor q toward the randomly picked conﬁguration
near
Once we have d(yl,0), the spine qyl,0 can be qrand, we do a multidirectional extension by growing a
extended towards qel by the length yl,0yl,1 = generalized bur GBur(qnear) from qnear. Voronoi bias
yl,0qelTCB(yl,0,d(yl,0)), thus adding one of N is preserved by imposing that one spine of GBur(qnear)
extensions in the process of constructing GBur1(q,Qe). has to be directed toward qrand. We refer to the result-
Analogously, the remaining N − 1 extensions can be ing structure/algorithm as to rapidly exploring generalized
computed to complete the GBur (q,Q ). Clearly, bur tree (RGBT). Again, the bidirectional version inspired
1 e
GBur (q,Q )maybefurtherpropagatedtoGBur (q,Q ) by [3] is investigated. Functions RGBT-CONNECT and
1 e 2 e
using the same procedure. For instance, when the robot GBUR_CONNECT show the pseudocode of the algorithm.
moves from conﬁguration y to y , the j-th link As in [18], the algorithm may enter the RRT mode, if the
l,0 l,1
gets relocated from P Q to P Q that still belongs to workspacedistancedropsbelowagiventhreshold(lines5-10
1 1 2 2
halfspace HS . Again, the “fake” distance query may inRGBT-CONNECTandlines9-15inGBUR_CONNECT).
ij1
compute the distance from P Q to A . The result is Fig. 2 shows the exploratory potential of the unidirectional
2 2 ij
then used to extend from y to y . The process is RGBT comparedto those of RBT [18] and RRT [2]. RGBT
l,1 l,2
repeated in the same fashion for other endpoints and clearly covers the free C-space much faster.
arbitrarily many times k to compute GBur (q,Q ). The
k e V. SIMULATIONSTUDY
function GENERALIZED_BUR shows the pseudocode of
the algorithm for computing the generalized bur of order Numerical experiments are implemented in C++, where
k using distance underestimations. Fig. 5 shows several distance/collision queries have been performed using FCL
examples of generalized bur in 2D C-space computed by library[25].ThenearestneighborqueryusesFLANNlibrary
1179
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. Algorithm 2 RGBT-CONNECT(q ,q ) of nodes to facilitate the nearest neighbor queries. We have
start goal
not performed the dedicated analysis for RGBT regarding
12:: Tfoari←=1qsttoarimt,aTxbdo← qgoal the optimal N, but rather kept the same value N = 7. An
345::: yqifend1eca(r←qn←ReaArNN)DE<AOdRMkE_StChTOe(nyNeF1I,GT(a)) ⊲RRTmode iandcarpetmiveenNtalpdeurrfionrgmtahnecealigmoprirtohvmem(seeneto[2f7R])B,Tbuistpthoisssiobpletiboyn
67:: qifn¬ewCo←llisqinoena(rq+neεwk,yyqeen11e−−aqqrnn)eetaahrrekn itshaonutonoef cthoinsvepxapoebr’sstacscleop(e2. DFoOrFeabc)h, 8sDceOnFe bh)avainngd mABorBe
8: Ta ← Ta∪qnewqnear b)), RBT-CONNECT [18] is tested in two modes. The ﬁrst
9: else
10: Continue mode treats the environment as a single collision object,
11: else
111234::: qQfoere1j←←=2qqetn1oeaNr+doδkyyee⊲11−−atqqtnnheeeaaﬁrrrkstran⊲doT⊲mh(ecdoﬁisnrtsﬁatgnuscpreaidntietoonpqoyiene1t1s) wmamlhruoeeldatreidepayilssedctecohconeolslmsiisespticeooonnsnteldoydbmsejlneoovcdwtiesreoroanbbsmsyaee1nrnv0te.a-s2tItt0etth%muerp.netTsnhtvoouiurstbo,tenwhnmaeeteﬁrtnethtpefotrhsorertmocoounngalndyh
1111156789::::: Tqan⊲eyqQEw←eenejj←dpT←←←oEaiNn∪tRQDqoAGPenfONBe∪tahIDuNreqOrTe+ﬁkMi(r(Gsδ_qtBCknsyypOeueeiaNnrjjrek−−F,(IaQqqqGsnnen(eea))eaaarrt⊲arkr,OgQetthee)for,rqraec1nodn)onmectdhireeucrtiiostnics rptbhelesaaucntolectmsodvipfseoutrartencdtcoheuresrseidﬁsniprgjsotw(n1mdi2tiho)nidgwnehlR.ienGFrkeoBsrt.ThHt-ehCemeOniccNneoiN,mmEtiphzCueatTtadi,otiiwsnotneaisnuocpsefeerdldfioinOjrkBm-ctBaeonds-
overeightOBBvertices.Thenearestneighborquery(line4,
2201:: ifGrBeUtuRrn_CPOANTHN(ETCaT,(TTbb),qnew)=Reachedthen Alg. 2) observes the tree Ta as a set of nodes, where each
22: SWAP(Ta,Tb) generalizedburaddedtothetree(line18,Alg.2)contributes
23: return Failure with all its nodes (up to kN nodes - see Algorithm 1). The
RRT step size ε (line 6, Alg. 2) and parameter Threshold
Algorithm 3 GBUR_CONNECT(T,q) (line 17, Alg. 3) are set to 3 π , while d (line 5, Alg. 2) is
180 k
1: qn ←NEAREST(q,T),q0 ← qn set to 0.005.The parameterδ (lines 12 and 16, Alg. 2) used
2: repeat for generating the set of remote points Q is set to 2π.
34:: ifdcq(tqn←)>ENdDkPtOhIeNnT(GBurk⊲(qsnin,gqle)-,sqpi)ne GBur⊲dirEencdtipnoginattoqf tesFteigd.a6lgsohroiwthsmtsh.eBnoutmheprilcaanlnpeersrfoacrmhiaenvceedeinad1ic0a0t%orssfuocrctehses
56:: ∆qns ←← qkqtt−qnk rate for each scenario, where the results have been aver-
7: ifqn=qthen aged over 100 algorithm runs. Mean values are shown in
8: returnReached
9: else ⊲RRTmode black while standard deviations are in gray. Beside intuitive
1101:: qift¬←Coqllnis+ioεnk(qqq−−t,qqqnnnk)then fneuamtubreersoinf aTdadbitlieonI,altheextevnasriiaobnlsein“#gEexnteernasliiozends”budresn,oit.ee.s, tthhee
1123:: elseqn←qt number of executions of lines 6-9 in Alg. 1. Note that the
14: returnTrapped correspondingfor-loopmay be terminated should the exten-
1156:: ifkqrentu−rnqR0kea≥chkeqd−q0kthen sion yl,pyl,p+1 drop below a given threshold (not shown in
17: until∆s<Threshold thepseudocode).RGBTplannerconsistentlyoutperformsthe
18: return Trapped
RBT algorithm in all scenarios, with the runtime reduction
fromcca 50%(ABB b)) to 87%(2 DOF b)).Such improve-
mentisattributedtosubstantiallylessiterationsnecessaryto
withkd-treeapproach[26].Allthesimulationsareperformed obtain the solution path, i.e., less full distance queries.
on a PC with Intel Core i7-4702MQ 2.2 GHz and 16GB To test the limits of RGBT, we have conductedadditional
RAM. We compare performances of RBT-CONNECT from experiments where a single concave obstacle (a genus-
[18] and the proposed RGBT-CONNECT. For brevity, we two torus–Fig. 7) is subjected to several decomposition
omit RRT-CONNECT [3] from comparison since it was levels resulting in different cardinalities m of WO =
shown to be outperformed by RBT-CONNECT in [18]. {WO ,...,WO }. To make sure comparison with RBT
1 m
Moreover,other related distance-based planners such as [9], is fair within a given scenario, a decomposed obstacle is
[10] are omitted from this study mostly because they are merged back into a single collision object. Fig. 8 shows the
either outperformed by RBT, as shown in [18] (such as the bar chart of average runtimes (over 100 runs) for two algo-
algorithmfrom[10]), or byRRT itself (self-reportedin [9]). rithmsconsideringvariouslevelsofcardinalitym.Again,the
Three robot types are considered: 2 and 8 DOF planar RGBT algorithm ouperforms RBT for each scenario. Up to
manipulators, and a 6 DOF ABB IRB120 industrial robot. m≈100,itismorethantwicefaster.Form≈200thetime
Eachrobotissubjectedtotwoscenarios(Fig.6).Thenumber reduction is cca 35%. We conjecture that further increase
of spines used for RBT expansion was set to N = 7, of m would cause the equalization of performances. This
and kept constant during the algorithm run. This value was issueisleftforfutureworksincethecurrentimplementation
suggestedin[18]forthefastestexecutionbasedonempirical cannot handle more detailed segmentation. On the other
analysis. It came as the trade-off between exploration po- hand, we believe that the prospective use of inherently
tential (large N) and preventing the “explosion” in number convex BVH-based representation of objects within FCL
1180
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. Algorithm Time(s) Nodes Iterations #Extensions Time(s) Nodes Iterations #Extensions
2DOFa) 2DOFb)
RBT-CONNECT 0.304±0.290 3317±3055 208.8±187.8 0±0 11.274±8.655 40025±31201 6879±4981 0±0
RGBT-CONNECT 0.100±0.075 1197±822.6 18.7±13.4 5.17±0.49 1.450±1.969 3144±8581 1342±1665 0.89±0.46
8DOFa) 8DOFb)
RBT-CONNECT 1.887±1.585 8151±6742 499.6±408.9 0±0 9.315±11.344 5988±1375 3803±3752 0±0
RGBT-CONNECT 0.336±0.100 1512±461 29.6±8.2 3.46±0.44 3.251±2.022 1566±1100 1260±681 0.28±0.16
ABBIRB120a) ABBIRB120b)
RBT-CONNECT 0.126±0.090 72.82±19.42 25.93±17.69 0±0 9.803±5.304 3812±3368 1847±1020 0±0
RGBT-CONNECT 0.041±0.045 59.67±13.07 18.44±16.33 2.31±0.09 4.865±3.974 963±342 1170±880 0.30±0.07
Fig.6:Top-Numericalresults. Bottom:scenarios for3robottypes:2DOFa),2DOFb),8DOFa),8DOFb),IRB120a),IRB120b).
If the closest point A of the link PQ w.r.t. obstacle WO is
−−→ i
interior point (as in Fig. 4), the vector NA is perpendicular
−−→
to PQ. Since NA is perpendicular A , it implies that PQ
ij
is parallel to A . Thus, ρ(S,A )= d , ∀S ∈ PQ. If the
ij ij ij
closest point A of the link PQ w.r.t. WO is the endpoint
i
of PQ, e.g., A ≡ Q, then ∠NAP = ∠NQP ≥ π. Let
2
S ∈ PQ, S 6= A and let the point S be the orthogonal
1
projection of S onto A . By Pythagorean theorem it holds
ij
thatρ2(S,A )=SS 2 =NS2−NS 2.Furthermore,since
Fcoign.ve7x:Ldeecftom-spcoesnitairoino.withtheconcave obstacle. Right-various levels of the∠NQP ≥ij π2,itfo1llowsthatNS2 ≥1 NA2+AS2 =dij+
AS2. Since NS is the projectionof AS onto A , we have
4 RRGBTB-TC-oCnonnencetct n∆=28754 that AS ≥NS11. It follows that ρ2(S,Aij)≥d2iijj+AS2−
me(s)23 n∆=4540 n∆=9280 NLeSt1S2∈≥PdQ2ij., NSo6=wAweanpdrolveet tthheatpρoi(nSt,SWObei)th≥e oρr(thSo,gAoinja).l
Ti1 n∆=1606n∆=2746 projection of S onto the plane Aij. Then1ρ(S,Aij)=SS1.
n∆=600 It is sufﬁcient to show that no point W ∈WO can belong
i
0 10  16  24  39  92  224 to segment SS1. Assume the opposite, i.e., ∃W ∈ WOi
Numberofconvexobjects such that W ∈ SS . This means that ∃W ∈ HS and
−1−→ −−→ ij1
Fig. 8: Bar chart of average runtimes. The number of triangles n∆ is the scalar product NW · NA > 0. This can be written
indicated foreachscenario. as: (cid:16)−N−→A+−A−W→(cid:17)−N−→A > 0 ⇒ d2 > −A−W→−A−→N. Putting
wouldaddtoalgorithm’sperformanceandbroadenitsscope i,j
toward general environments. x ≡ AW and δ ≡ ∠NAW, we have that xcosδ <−−d→ij.
Now, let T be the arbitrary point on the line segment NW.
VI. CONCLUSIONS
From the convexity of WO it implies that T ∈ WO . We
An approach to improve the C-space exploration of ma- have that −A→T = −A−→N + t−Ni−W→, t ∈ [0,1], and ATi2 =
nipulators is presented. It is based on the structure called d2 + t2NW2 + 2t−A−→N(cid:16)−A−W→−−A−→N(cid:17) = d2 + t2NW2 −
generalizedburthatattemptstofurtherexploittheworkspace ij ij
distance information, this time with some underlying, yet 2td2 + 2td xcosδ = NW2t2 + 2td (xcosδ−d ) +
ij ij ij ij
available knowledge about the geometry of both robot and d2 ≡ f(t). Observe the behavior of the quadratic function
ij
the environment. This allows for substantial enhancement f(t) in some vicinity of t = 0, where t ≥ 0. Clearly,
of exploratory capacities, utilized within a plain RRT-like f(0)=d2 =NA2. The ﬁrst derivative the function f(t) is
ij
planner which computes exact collision-free paths. Simu- df(t) = 2tNW2+2d (xcosδ−d ). Since xcosδ < d ,
lation study has shown that a novel algorithm consistently thdet limit value of f(ti)j at t = 0 iijs clearly negative, i.iej.,
+
outperformed its predecessor and other related methods by lim df(t) = 2d (xcosδ−d ) < 0, which means that
transitivity. Some limitations are indicated as well. fortsցom0edstufﬁcientliyj smallǫ>0,ijf(t)decreasesint∈[0,ǫ]
Future work will address asymptoticallyoptimalplanning meaning that f(ǫ) < f(0) = d2 . Thus, there exists a
and a more ﬂexible implementation within OMPL [28]. point T ∈ NW such that AT2 <idj2 . This contradicts the
ij
APPENDIX - Proof of Theorem 1 fact that the minimum distance between PQ and WO is
i
Proof: We ﬁrst prove the inequality ρ(S,Aij) ≥ dij. ρ(cid:0)PQ,WOi(cid:1)=dij, which completes the proof.
1181
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. REFERENCES [15] A.C.ShkolnikandR.Tedrake,“Sample-basedplanningwithvolumes
inconﬁguration space,”CoRR,vol.abs/1109.3145, 2011.
[1] L.Kavraki,P.Svestka,J.-C.Latombe,andM.Overmars,“Probabilistic [16] J. Bialkowski, M. Otte, S. Karaman, and E. Frazzoli, “Efﬁcient
roadmapsforpathplanninginhigh-dimensionalconﬁgurationspaces,” collisioncheckinginsampling-basedmotionplanning,”inAlgorithmic
Robotics and Automation, IEEE Transactions on, vol. 12, no. 4, pp. Foundations of Robotics (WAFR), 10th International Workshop on,
566–580,aug1996. 2013,pp.365–380.
[2] S. M. LaValle and J. J. Kuffner, “Rapidly-exploring random trees: [17] A.Knobloch,N.Vahrenkamp,M.Wächter,andT.Asfour,“Distance-
Progressandprospects,”inProceedingsWorkshopontheAlgorithmic aware dynamically weighted roadmaps for motion planning in un-
Foundations ofRobotics,2000. knownenvironments,”IEEERoboticsandAutomationLetters(RA-L),
[3] J.Kuffner, J.J.andS. LaValle, “RRT-connect: Anefﬁcient approach pp.0–0,2018.
to single-query path planning,” in Robotics and Automation, 2000. [18] B.Lacevic,D.Osmankovic,andA.Ademovic,“BursoffreeC-space:
Proceedings. ICRA ’00. IEEE International Conference on, vol. 2, a novel structure for path planning,” in Robotics and Automation
2000,pp.995–1001. (ICRA), 2016 IEEE International Conference on. IEEE, 2016, pp.
[4] S.KaramanandE.Frazzoli, “Sampling-based algorithms foroptimal 70–76.
motionplanning,”InternationalJournalofRoboticsResearch,vol.30, [19] J.-M.LienandN.M.Amato,“Approximateconvexdecompositionof
no.7,pp.846–894,June2011. polyhedra and its applications,” Computer Aided Geometric Design,
[5] L. Jaillet and J. Porta, “Asymptotically-optimal path planning on vol.25,no.7,pp.503–522, 2008.
manifolds,”inProceedingsofRobotics:ScienceandSystems,Sydney, [20] K. Mamou and F. Ghorbel, “A simple and efﬁcient approach for
Australia, July2012. 3d mesh approximate convex decomposition,” in Image Processing
[6] D. Berenson, S. Srinivasa, and J. Kuffner, “Task space regions: A (ICIP), 2009 16th IEEEInternational Conference on. IEEE, 2009,
frameworkforpose-constrainedmanipulationplanning,”International pp.3501–3504.
JournalofRoboticsResearch(IJRR),vol.30,no.1,pp.1435–1460, [21] A. Gaschler, R. P. A. Petrick, T. Kröger, A. Knoll, and O. Khatib,
October2011. “Robot task and motion planning with sets of convex polyhedra,”
[7] S. Redon, M. C. Lin, D. Manocha, and Y. J. Kim, “Fast continuous in Workshop on Task and Motion Planning at Robotics Science and
collisiondetectionforarticulated models,”JournalofComputingand Systems,Berlin, Germany,June2013.
InformationScienceinEngineering,vol.5,no.2,pp.126–137,2005. [22] F.Schwarzer, M.Saha,andJ.-C.Latombe,“Exactcollisionchecking
ofrobotpaths,” inAlgorithmic foundations ofrobotics V. Springer,
[8] J.Kwon and O.Khatib, “Adaptive collision checking forcontinuous
2004,pp.25–41.
robot motions within motion constraints,” in Intelligent Robots and
[23] ——, “Adaptive dynamic collision checking for single and multiple
Systems(IROS),2013IEEE/RSJInternationalConferenceon. IEEE,
articulated robots in complex environments,” IEEE Transactions on
2013,pp.5365–5372.
Robotics,vol.21,no.3,pp.338–353,2005.
[9] N.Vahrenkamp, T.Asfour,andR.Dillmann, “Efﬁcient motion plan-
[24] S. Tarbouriech and W. Suleiman, “On bisection continuous collision
ningforhumanoid robots usinglazy collision checking andenlarged
checkingmethod:Sphericaljointsandminimumdistancetoobstacles,”
robot models,” in Intelligent Robots and Systems, 2007. IROS 2007.
in 2018IEEEInternational Conference onRobotics andAutomation
IEEE/RSJInternational Conference on,Oct2007,pp.3062–3067.
(ICRA). IEEE,2018,pp.7613–7619.
[10] D. Bertram, J. Kuffner, R. Dillmann, and T. Asfour, “An integrated
[25] J.Pan,S.Chitta,andD.Manocha,“FCL:Ageneralpurposelibraryfor
approachtoinversekinematicsandpathplanningforredundantmanip-
collisionandproximityqueries,”inRoboticsandAutomation(ICRA),
ulators,”inRoboticsandAutomation,2006.ICRA2006.Proceedings
2012IEEEInternational Conference on,May2012,pp.3859–3866.
2006IEEEInternationalConferenceon,15-192006,pp.1874–1879.
[26] M.MujaandD.G.Lowe,“Fastapproximate nearest neighbors with
[11] S. Quinlan, “Real-time modiﬁcation of collision-free paths,” Ph.D.
automatic algorithm conﬁguration,” in International Conference on
dissertation, StanfordUniversity, 1995.
Computer Vision Theory and Application VISSAPP’09). INSTICC
[12] B.LacevicandP.Rocco,“Safety-orientedpathplanningforarticulated
Press,2009,pp.331–340.
robots,”Robotica, vol.31,no.06,pp.861–874,2013.
[27] B.Lacevic, D.Osmankovic, andA.Ademovic, “Pathplanning using
[13] O. Salzman, K. Solovey, and D. Halperin, “Motion planning for
adaptive burs of free conﬁguration space,” in 2017 XXVI Interna-
multilinkrobotsbyimplicitconﬁguration-spacetiling,”IEEERobotics
tional Conference on Information, Communication and Automation
andAutomationLetters, vol.1,no.2,pp.760–767,2016.
Technologies (ICAT). IEEE,2017,pp.1–6.
[14] A. Tahirovic and M. Ferizbegovic, “Rapidly-exploring random vines
[28] I.A.Sucan,M.Moll,andL.E.Kavraki,“Theopenmotionplanning
(RRV) for motion planning in conﬁguration spaces with narrow
library,” IEEE Robotics & Automation Magazine, vol. 19, no. 4, pp.
passages,” in 2018 IEEE International Conference on Robotics and
72–82,2012.
Automation(ICRA). IEEE,2018,pp.7055–7062.
1182
Authorized licensed use limited to: UNIVERSITY OF ROCHESTER. Downloaded on September 21,2020 at 05:56:02 UTC from IEEE Xplore.  Restrictions apply. 