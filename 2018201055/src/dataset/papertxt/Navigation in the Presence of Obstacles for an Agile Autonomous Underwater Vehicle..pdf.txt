2020 IEEE International Conference on Robotics and Automation (ICRA)
31 May - 31 August, 2020. Paris, France
Reliable Trajectories for Dynamic Quadrupeds
using Analytical Costs and Learned Initializations
Oliwier Melon , Mathieu Geisert , David Surovik , Ioannis Havoutis and Maurice Fallon
Abstract—Dynamic traversal of uneven terrain is a major
objectiveintheﬁeldofleggedrobotics.Themostrecentmodel
predictive control approaches for these systems can generate
robust dynamic motion of short duration; however, planning
over a longer time horizon may be necessary when navigating
complex terrain. A recently-developed framework, Trajectory
Optimization for Walking Robots (TOWR), computes such
plansbutdoesnotguaranteetheirreliabilityonrealplatforms,
under uncertainty and perturbations. We extend TOWR with
analytical costs to generate trajectories that a state-of-the-art
whole-body tracking controller can successfully execute. To
reduceonlinecomputationtime,weimplementalearning-based
scheme for initialization of the nonlinear program based on
ofﬂine experience. The execution of trajectories as long as 16
footsteps and 5.5 s over different terrains by a real quadruped
demonstrates the effectiveness of the approach on hardware.
Thisworkbuildstowardanonlinesystemwhichcanefﬁciently
and robustly replan dynamic trajectories.
Fig. 1. The ANYbotics ANYmal executing a dynamic stair climb with
I. INTRODUCTION the proposed approach, as shown in the accompanying video https://
youtu.be/LKFDB_BOhl0.
Legged robots are soon expected to be used in a range of
application domains where advanced mobility is required. Cost Terrain
The key beneﬁt of such machines is their ﬂexibility in Initial Base & Feet
operating on terrain designed for humans: conﬁned spaces Task Neural Guess TOWR Trajectories Whole-Body
Network Controller
and lacking regular structure. This goal implies increased
complexity as legged robots are articulated systems with
high-dimensional kinematics and dynamics that continually
Fig.2. Overviewofthesystemusedforlearning,trajectoryoptimization
change their contact with the environment. Other hurdles andexecutionontheANYmalquadruped.
arise due to real-world sensing, actuation limits, state es-
timation and perturbations. As a result, legged robots need a
optimization problem of dynamic motion generation, which
ﬂexiblemotionplanningapproachtoefﬁcientlyandrobustly
we demonstrate for a quadrupedal robot walking on uneven
perform their tasks.
terrain.Theobjectiveistoproducerobustplansoversuitably
The generation of dynamic motions for these platforms long time horizons with minimal online computation effort.
is an open research problem with recent advances focusing
on optimization-based approaches. Longer trajectories can
A. Contributions
produce better system performance, but are more difﬁcult
to compute, ruling out the online use of global methods. • Extension of the TOWR legged robot motion opti-
Gradientdescentislessdemandingbutcangetstuckinpoor mization framework [1] with analytical costs to create
localminimaduetothestrongnon-convexityoftheproblem. dynamic trajectories that can be reliably tracked by a
Thus, local optimization is appealing only if the constraints, controller.
costs, and the initial guess of the nonlinear program can all • A data-driven method to produce good initial guesses
be speciﬁed effectively. whichspeedsupoptimizationconvergence.Themethod
As shown in Fig. 1 and 2, we combine a learning-based can compute 16-footstep trajectories in less than 1
data-driveninitializationwithanenhancedformulationofthe second while avoiding poor local minima.
• Signiﬁcant evaluation in dynamic simulation to demon-
This work was supported by the UKRI/EPSRC RAIN Hub strate how the combination of these changes make
[EP/R026084/1] and the EU H2020 Projects MEMMO and THING,
executionmuchmorereliablethanthebaselinemethod.
the EPSRC grant ‘Robust Legged Locomotion’ [EP/S002383/1] and a
Royal Society University Research Fellowship (Fallon). This work was • Experiments in which the real ANYmal robot trots or
conducted as part of ANYmal Research, a community to advance legged walksacrossﬂatoruneventerrainwhileusingonlyon-
robotics. The authors are with Oxford Robotics Institute, University
{ boardsensorsforstateestimation,verifyingthevalidity
of Oxford, UK. Email: omelon, mathieu, dsurovik,
}
ioannis, mfallon @robots.ox.ac.uk. of our approach and its suitability for real hardware.
978-1-7281-7395-5/20/$31.00 ©2020 IEEE 1410
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. B. Overview
left-foot stance phase base y-position
This paper begins with an overview of related state-of-
left-foot z-position left-foot z-force
the-art approaches in Sec. II. Descriptions of the baseline
trajectory optimizer and tracking controller are then pro-
vided in Sec. III, along with new modiﬁcations that allow
these tools to be effectively combined. Sec. IV describes
our method for training effective initialization using ofﬂine
prior experiences, with some analysis of its beneﬁt. Sec. V
0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6
describes experimentation on different terrains in both simu-
Time (s)
lationandhardware.Thepaperconcludeswithﬁnalremarks
in Sec. VI.
Fig.3. Anillustrativesampleofthetrajectoriescomputedbythenumerical
II. RELATEDWORK optimizer,foraquadrupedaltrot.Reddotsandblacklinesrepresentvalues
atoptimizationnodes,interpolatedusingcubicsplines.
1) TrajectoryOptimizationforLeggedRobots: Trajectory
optimization (TO) approaches have been used for short to
medium scale motion planning in recent research [2], [3]. Machines[15],[17],GaussianProcessRegression[16],[17],
They usually employ direct methods to transcribe a continu- or Artiﬁcial Neural Networks (ANNs) [15], [18]. Another
ous,inﬁnite-dimensionalproblemasadiscrete,parametrized researchstrandistheuseoffeature-spacesanddimensional-
nonlinear programming problem (NLP) [4]. ity reduction techniques [19], [13], [14], [15], [16]. In each
Legged locomotion optimization problems are subject to case, the goal is to sufﬁciently represent past experiences in
discontinuitiesduetocontacttransitionsoftheend-effectors. a manner which can be related to future decisions.
Two approaches have been used to recast it as a continuous
problem. The ﬁrst reformulates contact as a smooth rather III. MOTIONGENERATION
than a discontinuous state [5], [6], [7]. This transforms the
In this section we present our motion planning and ex-
discontinuous and minima-prone problem into a continuous
ecution approach. We ﬁrst review the TOWR trajectory
problem that can be solved with homotopic methods.
optimization package, which uses a simpliﬁed dynamics
The second approach deﬁnes the problem as a succession
model of the robot to plan motions for its legs and center
of phases separated by the contact state transition of each
of mass (CoM) between initial and ﬁnal conﬁgurations.
end-effector. In most cases, the timing and position of the
We present improvements and adaptions that help create
contacts are computed externally and the optimization only
trajectories which are more suitable for the real robot. We
solves for the centroidal motion of robot [8], [9], [10], [11].
then overview the tracking whole-body controller that we
In [1], the contact state of each leg is considered separately,
use to compute the joint torques necessary to execute these
whichtheoreticallyallowsittogeneratedifferentgaitswhen
generated motions and provide an illustrative evaluation.
optimizing the duration of each phase. Moreover, the posi-
tions of the footsteps are included in the set of optimized
A. Trajectory Optimization for Walking Robots (TOWR)
variables. Unlike the previously mentioned approaches, this
formulationallowsahighlynon-convexshapeoftheproblem The paper extends the work of Winkler et al. and their
to be solved by recasting it as a feasibility problem. open-source library TOWR[1], [20]. TOWR is capable of
2) Data-driven Initialization: Data-driven trajectory ini- producinghighly-dynamictrajectoriesforarangeofwalking
tialization schemes have been applied in the domain of robots by formulating locomotion as a nonlinear program
manipulation to speed up the computation of smooth paths (NLP). The approach considers single rigid body dynamics
when reaching past obstacles [12], [13], [14]. Related meth- (SRBD) of the base, which is assumed to contain all of the
ods produce multiple initializations in different basins of system’s mass, along with the paths and contact forces of
attraction so as to identify distinct ways of approaching the the feet.
object to be grasped [15], [16]. Dynamic constraints can The problem is discretized into a numerically-solvable
additionally be met for tasks such as quickly reaching to formulation using a collocation-based transcription method.
catch a thrown object [17] or rejecting large disturbances Inthiscase,trajectoriesareconstructedassplinesofN cubic
onunderactuatedaerialvehicles[18].Forleggedlocomotion Hermitepolynomials,whereeachpolynomialisfullydeﬁned
onterrain,arelatedideawasusedtoplanindividualfeasible by the values and the derivative at its start and end nodes.
footsteps,whichwerethencombinedbyanotherprocessinto Fig.3showsthesesplinesforsomeoftheproblemvariables.
a full motion plan [19]. The base trajectory is discretized using a ﬁxed timestep dt
Most of these efforts map tasks to initial solutions, while (0.1 s), while the feet trajectories and contact forces are
others map to segments of solutions [19], or to additional discretized with a ﬁxed number of polynomials per phase (2
constraints that convexify the problem [15]. Nearly all con- for the swing trajectory, 3 for the stance forces). Therefore,
sider nearest-neighbor lookup and regression on an experi- thenumberofvariablesforthefeetandcontactforcesvaries
encelibraryasamappingmethod,whilemanyalsoconsider with the number of steps, while the number of base-related
other function approximators. These include Support Vector variables depends on the time horizon. The formulation of
1411
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. (cid:80)
the locomotion problem implicitly constrains some of the todiscouragetherobotfromselectingfootstepsclosetothese
variables: step edges. The selected cost is a differentiable Gaussian
• Forces are null during swing phases. function ex2s/2σ2 where xs represents the perpendicular
• Derivatives of the forces and feet positions are zero at distance from each footstep to the edge of the stair. This
the transitions between swing and stance phases. only affects the footsteps which are close to the edge, while
• A swing node is the highest point of a swing trajectory having a negligible effect on the remaining ones. To ensure
and its z-dimension derivative is set to 0. thatcollisionswithterrainareavoided,bothaconstraintand
• Feet are ﬁxed in place during a stance phase. a cost are applied to the height of the swinging feet. The
constraint ensures that the swing node is a certain distance
Consequently, the number of optimization variables is then
above each of the adjacent stance nodes while the cost
N = 12T/dt+20S +120, where T is the time horizon,
minimizestheswingheighttopreventlargelegmotionsthat
dt the time discretization interval for the base motion and
would create angular momentum on the real system.
S is the number of steps. Moreover, if the timing of steps
is optimized, the duration of the stance and swing phases of B. Whole-Body Controller
each step are included, adding 2S variables.
Oncethetrajectoryhasbeengenerated,weusethewhole-
Theproblemisthentransferredtoaninterior-pointmethod
bodycontrollerofBellicosoetal.[22]totrackthetrajectory
solver (Ipopt [21]) which searches for a solution respecting
of the base and the end-effectors at 400Hz. The controller
the following explicit constraints:
contains a state machine which adapts gains in response to
• Dynamics of the system (modeled as one rigid body).
slipping and other unexpected contact events.
• Kinematic limits (the positions of feet, relative to the
base, constrained within a box). C. Validation in Simulation
• Maximum contact forces and friction pyramids. In Fig. 4, we demonstrate the need for more sophisticated
• Feet at terrain height during the stance phase. planning for a trajectory up and over a step, both with
Since the original TOWR formulation poses only a feasi- and without the proposed costs. Fig. 4(a) and 4(b) show an
bility problem, the NLP solver generally converges quickly overall decrease in peak x- and y-direction forces. Fig. 4(c)
(in less than 40 iterations). While the resulting motion shows an increase in the z-direction force during the third
plans are promising, realizing them on hardware is difﬁcult. second of the trajectory resulting from a corresponding
Oscillation and strong body rolling motions are common decreaseinthex-directionforce.Fig.4(d)showstheinertial
while footstep placement and leg terrain clearance are not stabilization of the base—a signiﬁcant reduction in the roll
considered. In this work, we tackle these issues as follows. and pitch angular velocity of the base can be observed.
1) Smoothing trajectories using costs: To generate more Fig. 4(e) and 4(f) show the norm of the tracking errors of
conservative trajectories for motions such as the one shown thebaseduringtheexecutionofthetrajectoriesbythewhole-
(cid:80)
in Fig. 1, we extended TOWR with analytically-derived bodycontrollerintheGazebophysicssimulator.Initially,the
costs. A set of i costs J (t) are scaled by weights ω , to controller manages to track both trajectories well; after 2 s,
i i
give a total cost of J(t) = ω J (t). Integral costs were the controller can no longer adequately follow the trajectory
i i
added to minimize linear velocity in the z-axis and angular without the proposed costs, as indicated by the increase in
velocities of the base, to penalize the magnitude of the orientation error. At 3.2 s, the robot’s front foot collides
ground-reaction forces and their derivatives, and to maintain with the step and the robot falls. Meanwhile, the controller
the desired(cid:90)mag(cid:18)n(cid:16)itude of the norm(cid:17)al force. The ge(cid:19)neric cost tracking the trajectory generated with the addition of the
was proposed costs successfully completes the execution.
T − 2 However, the use of costs and constraints makes the
Ji(t)= xi(t) xrief(t) +ωi,dx˙i(t)2 dt, (1) solve time of the optimization problem longer, primarily by
0 increasingthenumberofiterations;weusemachinelearning
where x (t) is the optimized polynomial and ω is the
i i,d to provide an efﬁcient optimization seed which offsets the
weight on its derivative. This penalizes short, but potentially
extra computation time shown in Table I.
large, deviations from the reference value xref(t). These
i
costs and their Jacobians were computed analytically using IV. LEARNINGINITIALIZATIONS
the parameters of the polynomials and their relations to the
Optimization frameworks such as TOWR use solvers
values at each node of the trajectories.
which require a guess of the solution y. It can be generated
2) Locomotion on uneven terrain: We aim to generate
automatically by some map
dynamic motions to traverse slopes, steps and stairs. The →
original TOWR implementation does not take into account A:x y0 (2)
swing collisions between spline nodes. To resolve this, that acts upon the task x, e.g., the pair of initial and
we add kinematic constraints to the base of the robot to desired robot states. Here, primal variables of the interior-
enforce that it remains a certain distance above the feet; this pointmethodareinitializedwithaguesswhichsubstantially
eliminates the possibility of collision between the base and affectsnotonlytherateofconvergencebutalsothequalityof
the ground. To prevent the solver from creating trajectories y.Asmorecostsandconstraintsareused,morelocalminima
thatpassthroughorcollidewithstepedges,weaddedacost arise, and the initial guess becomes even more inﬂuential.
1412
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. 100 Training Guess
N) 50 LF stance w/o costs w/ costs Task Heuristic Initialization TOWR
(a)ce ( 0 Offline Solution
or -50
x-F -100 Online Learned Initialization Guess TOWR Base & Feet
Task Trajectories
25
N)
(b)e ( 0
Forc -25 Fopigti.m5iz.ertoLebaerniinnigtialfirzoemdcplroesveiotousafguolloyd-csoonlvuetirogne.d outcomes allows the
y- -50
200
N) mimic the behavior of the optimization process TNA . For
(c)e ( 100 agiventaskspaceX,its(cid:88)optimalparametersarethendheﬁned
c
or by
F
z- 0 (cid:107) − (cid:107)
θ =argmin A (cid:48)x y (x) (3)
2 roll w/o costs roll w/ costs θ(cid:48) x∈X θ h,N W
d/s) 1.5 pitch w/o costs pitch w/ costs with a positive-deﬁnite weight matrix W.
(d)Velocity (ra 0.501 tTohI3enshetihdiadsreewnodlrake{yteAerrmθs,iiwsneahdefruetlhlθyro-rc}ueogfnehnrsesctuotepdtehrneveicsuoerndalnenleceattiwronnoinrwkgewioginthht∈s2a.
ar  -0.5 dXataset D = xi,yh,N(xi) = (X,Y) with samples xi
ul .Atpresent,agivenθislearnedforaspeciﬁcenvironment;
ng -1 however,thisservesasaﬁrststeptowardcontextualplanning
A
-1.5 withxaugmentedbylocalenvironmentalfeatures.Theform
0.05 ofy,whoselengthdependsonthetotaldurationandfootstep
m)
count, is also kept constant.
(e)Err. ( 00..0013 Given the signiﬁcant risk of converging to poor local
s. 0 minima, the dataset D is not guaranteed to imply a well-
Po-0.01 behavedmapfromX tothesolutionspaceY.Twoadditional
w/o costs
ad) 0.3 w/ costs steps are thus taken to ensure the tractability of the learning
(f)Orient. Err. (r -000...12010 1fall (w/o co2sts) 3 4 5 pgmroFabixlrestmto, De(3x)cilsaundﬁdeltetphroeeodrqbus{aaosllieutdytiooonfn|siatfsrotrhmerseutsrlhat.oinldingo:f}solution cost
Time (s) Dgood = xi,yi g(yi)<gmax (4)
Second,sinceevenD isunlikelytocontainonlyglobally
good
optimal solutions, the average performance and uniformity
Fig.4. Simulatedclimbingasinglestep,similartoFig.7:byaddingcosts
totheoptimizationproblemwecanconstrainfootforcesandbaseangular of the learned initialization can potentially be increased by
velocitiestosuccessfullyclimbastep(Sec.V-.2)insimulation. repeating the process of Fig. 5 with θ retrained on optimiza-
tion outcomes resulting from its previous value. This cycle
of moderate exploration and ﬁltering thus lends an aspect
The conventional guess generator for TOWR, termed
of reinforcement learning to the scheme, with particular
Heuristic, linearly interpolates a path for the ﬂoating base
similarity to the alternation between local optimization and
between the start and goal locations from x. Footsteps are
global supervised learning of control laws in Guided Policy
evenly-spacedandtransitionsbetweenthemareevenly-timed
Search [23].
according to the selected gait, with contact forces equally
The learning method is summarized in Algorithm 1. No-
distributed to counteract the robot’s weight.
tably, N < N can be used due to the faster convergence
The objective of this section is to produce a data-driven θ h
observed when using learned initialization.
initializer, LearnedInit, to replace the heuristic such that far
less optimization effort (iterations) is required, as sketched B. Setup
in Fig. 5, while furthermore avoiding poor local minima. For each of the test environments, which will be fully
detailed in Sec. V, a set of about 2000 tasks were sampled
A. Methodology
from the task space. This space expresses variation of the
Denoting the heuristic as A and an iteration of the initialbaselocationandyawangle.Thedistributiong(Y)of
h
optimizer as another map T, optimization can be expressed costs resulting from optimization with Heuristic and N =
h
as y (x) = TNA x, with iteration count N selected 100 generally exhibited a long tail of outliers, as seen in
h,N h
based upon convergence or available computation time. The Fig. 6, that correspond to poor local minima. The ﬁltering
improvedinitializerisafunctionapproximatorA trainedto threshold g was set at the start of this tail, reducing the
θ max
1413
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. Algorithm 1:TRAININITIALIZER description is deferred to Sec. V. The results here reﬂect the
Input: A set of sampled tasks X SinglePalletproblemofascendingaledge.Forthi−sproblem,
Ou←tput: Learned initializer parameters θ t−he starting base position ranges±from between 0.5 m to
Y TOWR(Ah(X);Nh) 1.5 m back from the step and 0.75 m later±ally◦from the
forloop countdo goal position, with yaw variation in the range 30 .
←
D FILTER(X,Y;g ) Figure 6 shows the beneﬁts of LearnedInit in terms of
←good max
θ SUPERVISEDLEARNING(D ) convergence rate, ﬁnal cost, and the maximum force ex-
← good
Y TOWR(A (X);N ) perienced by the robot. Heuristic initialization often results
θ θ
returnθ in poor local minima, and sometimes causes divergence of
the optimization process as indicated by high costs and
violations of the maximum force constraint (truncated from
1.00 1.00
Heuristic the plot). Due to the use of ﬁltering, LearnedInit exhibits
n
0.75 olatio0.75 HLeeaurrnisetdicIn_igt-o1od btaestktesrtahnadt mweorreecfaoinlesdistbeyntHpeerufroirsmtica.ncRee,tsrauicncienegdiLnegaornnemdIonsitt
cost0.50 nt vi0.50 LLeeaarrnneeddIInniitt--23 afteroptimizingitsoriginaloutputsetincreasesthesebeneﬁts
0.25 strai0.25 and eliminates nearly all outliers.
n
o
0.00 c0.00 V. EXPERIMENTALEVALUATION
0 5 10 15 20 25 0 5 10 15 20 25
The proposed approach was evaluated using 3 different
iterations iterations
terrains of increasing difﬁculty. As discussed in Sec. III-A,
103 103 thenumberofoptimizationvariablesdependsonthenumber
Heuristic of steps and the time horizon of the trajectory. While the
LearnedInit-1
es102 LearnedInit-2 es102 number of steps was kept constant (16 steps for dynamic
nc LearnedInit-3 nc walking, 14 for trotting), the time horizon was changed
e e
curr101 curr101 on a per-environment basis to make dynamic trajectories
c c feasible. A different initializer was trained for each gait
o o
and environment pair, corresponding to a ﬁxed number of
100 100
optimization variables.
0 1 2 3 4 5 200 400
cost maximum force (N) 1) Flatground: Thegeneratedtrajectoriesweretestedon
ﬂat ground for distances of up to 1.5 m with strides of up to
50 cm. To have highly dynamic motions, the time horizon
Fig. 6. Optimization performance under different initialization schemes
onalargetaskset.WithHeuristic,manysampledtasksdiverge,producing has been set to 3.5 s which resulted in a velocity of about
highcostsandforces.EachcycleoftrainingforLearnedInitimprovesthe 0.6 m/s during the middle stage of the trajectory. The ﬁrst
convergencerate,ﬁnalcost,andmaximalforce,whileeliminatingoutliers.
iteration of the learning phase shown in Fig. 5, the heuristic
initialization, used to generate the ﬁrst set of data, based the
initialtrainingsetD toabout300-500sampledtasks,and contactsequenceonatrottinggait.Forthissetup,thenumber
good
atwo-layernetworkwasﬁttothissmalldataset.Subsequent of optimization variables was 848.
×
learning cycles used N = 25 due to fast convergence, as 2) SinglePallet: TheSinglePalletisastandard1.2 1m
θ
wellasa3-layernetworkduetothelargernumberofsamples industrial pallet with a sheet of plywood on top (see Fig. 7),
passing through the ﬁlter. whose total height was 16.5 cm. For this experiment, the
The loss-weighting matrix W consistently weighted all forward motion was about the same as for the Flat Ground,
optimization variables within a given category. An initial while the time horizon of the trajectory was increased to
check was conducted in which some categories were ini- 5.5 s. The initial orientation of the base was restricted such
tialized by A and others by A . This revealed that the base that the pallet stays within the ﬁeld of view of the robot’s
θ h
linearpositions,steppingphasedurations,andcontactforces camera (to detect the pallet position). In this scenario, there
were the most crucial values to improve through learned were 952 optimization variables.
initialization. The implication is that it is easier for the 3) Double Pallet: This two-step environment is shown
optimizer to move along some dimensions of the solution in Fig. 1. The steps were 14.5 cm and 16.5 cm high.
spacethanothers,andthattheinitializershouldprioritizethe The horizontal distance between steps was 40 cm. The
accuracy of the strongest nonlinear inﬂuences. Ultimately, optimizationparameterswerekeptthesameasfortheSingle
the best performance was obtained using coarsely tuned Pallet; again being 952.
weights that included all categories.
A. Test in dynamic simulation
C. Analysis
ThetrackingerrorsofthedesiredbaseposefortheSingle
This section provides a detailed look at the effect of Pallet are shown in Fig. 4(e) and 4(f). To evaluate the
Algorithm1upontheoptimizationprocess.Assimilartrends performance of the learning-based approach, solutions from
were observed for all the environments tested, their detailed threeinitializationmethodsweretestedontheDoublePallet.
1414
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. Fig.7. ThecomparisonofaTOWR-generated,dynamictrajectory(top)withtheexperimentalevaluation(bottom)fora5.5sclimbingofapalletwith
aturn.
100 1.00 Optimization FlatGround(ms) Pallets(ms)
Heuristic
Variables 1stiter. Mean 1stiter. Mean
uccess rate (%) 257505 tracking error000...257505 LLeeaarrnneeddIInniitt--13 CFNNOuooMllPPPUhhaaTssAeeT&IOFNeeTtIME322P118E502R[[[322IT008422E]]]RATTAI1BO568NL694.E[[[T167IH2046]]E]FIRS835T483354IT[[[E735R072.014T]]]AKE411S117777LO[[[311N004G585E]]]R
s
0 0.00 DUETOTHESOLVERINITIALIZATION,SUBSEQUENTITERATIONTIMES
0 10 20 30 0 10 20 30 AREAPPROX.CONSTANT.THEMEANWASCOMPUTEDFOR100ITERS.
iterations iterations
THEVALUESW/OCOSTSARESHOWNINTHESQUAREBRACKETS.
Fig.8. Performanceoftrajectoriesclimbingasinglepalletunderwhole-
bodycontrolinsimulation(100tasksperdatapoint).LearnedInitproduces
the foot positions than the base trajectory since the base is
solutionsthatareeasiertotrack,reachinghighsuccessratesafterminimal
onlinereﬁnement.Fixingphasedurationsatinitializedvalues(dottedlines) coupled to, and constrained by, all the feet.
improvesoptimizationstability. Whiletherobot’ssensorscouldhavebeenusedtocreatea
modeloftheterrain(usingitsIntelRealSensedepthcamera),
the model of the environment was instead loaded from a
While varying the maximum iteration count, a sample set of
virtual model. This ensured repeatability and avoided limits
100 tasks was optimized for each. Trials that did not reach
insensorﬁeldofviewandtheresolution.Forthetestsusing
thegoalstateweremarkedasfailures.Trackingaccuracywas
pallets,therobot’sfrontcamerawasusedtoreadanAprilTag
measured for successful runs to indicate how well-suited the
which gave the position and orientation of the obstacle with
planned trajectories were to the closed-loop system.
respecttotherobot.Therobot’sonboardstateestimator[24]
Fig. 8 demonstrates that the outputs of LearnedInit are
was used as state input; measureable estimator drift was
executable more than half the time without any further
present.Thefullsystem—thegenerationoftheinitialguess,
optimization, and the success rate approaches 95% within
the optimization of the trajectory and its execution by the
about 5 iterations of re-optimization. Similar results were
whole-body controller—ran onboard the robot’s computer.
achieved for all environments. However, a higher number of
Fig. 7 shows the kinematic model and the real robot
iterations caused the optimization to unexpectedly diverge,
executing the optimized trajectory on the single pallet while
resultinginadropinsuccessrates.Shownbythedottedlines
Fig.1shows thedoublepallet.Theresults showthatdespite
in Fig. 8, success rates remained high when a separate set
the errors in state and terrain estimation, the robot realized
of optimized trajectories, with phase durations ﬁxed at their
the trajectory to a high degree of accuracy and precision.
initializedvalues,wereexecuted.Theobservedbehaviorwas
caused by the extreme nonlinearity of the problem. VI. CONCLUSION
Thisworkextendedanoptimizationformulationforwalk-
B. Test on the real platform
ing robot trajectories so that its solutions are not only
TableIsummarizesthecomputationtimesobtainedonthe feasible in theory, but can also be reliably executed on a
onboardlocomotioncomputer(Inteli7-7500U).Threevaria- real quadrupedal robot on a variety of terrains of increasing
tionsofproblemformulationhavebeentested:optimizingall difﬁculty. Strong nonconvexity and increased computational
variables, keeping only phase durations ﬁxed, and keeping expensewereoffsetbygeneratinginitialguessesfromaneu-
both phase durations and footstep locations ﬁxed. Not re- ral network trained on ﬁltered experiences gathered ofﬂine.
optimizing the phase durations gives a great improvement We will carry these ﬁndings onto our future work which
in the computation time per iteration while the success rate aims to achieve online replanning of terrain-aware dynamic
is similar, or better. Additionally, the foot trajectories can locomotion with a several-step horizon. Future work will in-
be taken from the initialization (but eventually adapting the tegrate environmental perception into the initialization map,
height to correspond to the terrain) and not re-optimized, more deliberately exploring the nonconvex solution space,
but this results in a slight increase in the computation time. and deploying the scheme in a receding-horizon manner for
It appears that it is simpler for the optimization to adapt sustained mobility.
1415
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. REFERENCES RoboticsandAutomation(ICRA),StPaul,MN,USA,May2012,pp.
3671–3678. 2
[1] A.W.Winkler,C.D.Bellicoso,M.Hutter,andJ.Buchli,“Gaitand
[13] N. Jetchev and M. Toussaint, “Fast motion planning from experi-
trajectory optimization for legged systems through phase-based end-
ence: trajectory prediction for speeding up movement generation,”
effector parameterization,” IEEE Robotics and Automation Letters,
AutonomousRobots,vol.34,no.1,pp.111–127,Jan.2013. 2
vol.3,no.3,pp.1560–1567,July2018. 1,2
[14] W.Merkt,V.Ivan,andS.Vijayakumar,“LeveragingPrecomputation
[2] M.Diehl,H.Bock,H.Diedam,andP.-B.Wieber,“Fastdirectmulti-
withProblemEncodingforWarm-StartingTrajectoryOptimizationin
ple shooting algorithms for optimal robot control,” in Fast Motions
ComplexEnvironments,”inIEEE/RSJIntl.Conf.onIntelligentRobots
in Biomechanics and Robotics, M. Diehl and K. Mombaur, Eds.
andSystems(IROS),Oct.2018,pp.5877–5884. 2
Springer,BerlinHeidelberg,2006,vol.340,pp.65–93. 2
[15] A.Dragan,G.J.Gordon,andS.Srinivasa,“Learningfromexperience
[3] M. Posa, C. Cantu, and R. Tedrake, “A direct method for trajectory
inmanipulationplanning:Settingtherightgoals,”inProc.oftheIntl.
optimization of rigid bodies through contact,” Intl. J. of Robotics
Symp.ofRoboticsResearch(ISRR). Springer,July2011. 2
Research,vol.33,no.1,pp.69–81,2014. 2
[16] T. S. Lembono, A. Paolillo, E. Pignat, and S. Calinon, “Memory of
[4] J. T. Betts, Practical Methods for Optimal Control and Estimation
motion for warm-starting trajectory optimization,” arXiv:1907.01474
Using Nonlinear Programming, 2nd ed. Society for Industrial and
[cs],July2019. 2
AppliedMathematics,2010. 2
[17] R. Lampariello, D. Nguyen-Tuong, C. Castellini, G. Hirzinger, and
[5] E. Todorov,“A convex,smooth and invertiblecontact modelfor tra-
J.Peters,“Trajectoryplanningforoptimalrobotcatchinginreal-time,”
jectoryoptimization,”inIEEEIntl.Conf.onRoboticsandAutomation
in IEEE Intl. Conf. on Robotics and Automation (ICRA), May 2011,
(ICRA),2011,pp.1071–1076. 2
pp.3719–3726. 2
[6] T. Erez and E. Todorov, “Trajectory optimization for domains with
[18] N. Mansard, A. DelPrete, M. Geisert, S. Tonneau, and O. Stasse,
contactsusinginversedynamics,”inIEEE/RSJIntl.Conf.onIntelli-
“Using a Memory of Motion to Efﬁciently Warm-Start a Nonlinear
gentRobotsandSystems(IROS),Oct.2012,pp.4914–4919. 2
PredictiveController,”inIEEEIntl.Conf.onRoboticsandAutomation
[7] I.Mordatch,E.Todorov,andZ.Popovic´,“Discoveryofcomplexbe-
(ICRA),Brisbane,Australia,May2018,pp.2986–2993. 2
haviors through contact-invariant optimization,” ACM Trans. Graph.,
[19] M. Stolle, H. Tappeiner, J. Chestnutt, and C. G. Atkeson, “Transfer
vol.31,no.4,pp.43:1–43:8,July2012. 2
of policies based on trajectory libraries,” in IEEE/RSJ Intl. Conf. on
[8] B.Ponton,A.Herzog,S.Schaal,andL.Righetti,“Aconvexmodelof
Intelligent Robots and Systems (IROS), San Diego, CA, USA, Oct.
humanoidmomentumdynamicsformulti-contactmotiongeneration,”
2007,pp.2981–2986. 2
inIEEE/RSJInt.Conf.onHumanoidRobots,Nov.2016,pp.842–849.
[20] Winkler,A.W.(2018)TOWR-Anopen-sourcetrajectoryoptimizer
2
forleggedrobotsinC++.[Online].Available:http://wiki.ros.org/towr
[9] J. Carpentier, S. Tonneau, M. Naveau, O. Stasse, and N. Mansard,
2
“A versatile and efﬁcient pattern generator for generalized legged
[21] A.WachterandL.T.Biegler,“Ontheimplementationofaninterior-
locomotion,”inIEEEIntl.Conf.onRoboticsandAutomation(ICRA),
point ﬁlter line-search algorithm for large-scale nonlinear program-
2016,pp.3555–3561. 2
ming,”MathematicalProgramming,vol.106,no.1,pp.25–57,2006.
[10] C. Mastalli, M. Focchi, I. Havoutis, A. Radulescu, S. Calinon,
3
J. Buchli, D. G. Caldwell, and C. Semini, “Trajectory and foothold
[22] C.D.Bellicoso,C.Gehring,J.Hwangbo,P.Fankhauser,andM.Hut-
optimizationusinglow-dimensionalmodelsforroughterrainlocomo-
ter, “Perception-less terrain adaptation through whole body control
tion,” in IEEE Intl. Conf. on Robotics and Automation (ICRA), May
and hierarchical optimization,” in IEEE/RSJ Int. Conf. on Humanoid
2017,pp.1096–1103. 2
Robots,Cancun,Mexico,Nov.2016,pp.558–564. 3
[11] C. D. Bellicoso, F. Jenelten, C. Gehring, and M. Hutter, “Dynamic
[23] S. Levine and P. Abbeel, “Learning neural network policies with
Locomotion Through Online Nonlinear Motion Optimization for
guided policy search under unknown dynamics,” in Conf. on Neural
QuadrupedalRobots,”IEEERoboticsandAutomationLetters,vol.3,
InformationProcessingSystems(NIPS),2014,pp.1071–1079. 4
no.3,pp.2261–2268,July2018. 2
[24] M.Bloesch,M.Burri,H.Sommer,R.Siegwart,andM.Hutter,“The
[12] D. Berenson, P. Abbeel, and K. Goldberg, “A robot path planning
two-stateimplicitﬁlterrecursiveestimationformobilerobots,”IEEE
framework that learns from experience,” in IEEE Intl. Conf. on
RoboticsandAutomationLetters,vol.3,no.1,pp.573–580,Jan.2018.
6
1416
Authorized licensed use limited to: La Trobe University. Downloaded on September 21,2020 at 13:01:16 UTC from IEEE Xplore.  Restrictions apply. 