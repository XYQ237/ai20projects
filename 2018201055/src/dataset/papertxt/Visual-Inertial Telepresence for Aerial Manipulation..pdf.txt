2020 IEEE International Conference on Robotics and Automation (ICRA)
31 May - 31 August, 2020. Paris, France
Dynamic Movement Primitives for moving goals with temporal scaling
adaptation
Leonidas Koutras and Zoe Doulgeri
Abstract—In this work, we propose an augmentation to and velocity trajectories are scaled towards the moving goal
the Dynamic Movement Primitives (DMP) framework which so that the preset time duration of the task is preserved. The
allows the system to generalize to moving goals without the
lattermayinduceeitherhigherorlowervelocitiesdepending
use of any known or approximation model for estimating the
on the current goal position. It is therefore possible that
goal’s motion. We aim to maintain the demonstrated velocity
levels during the execution to the moving goal, generating the generated velocity exceeds safety boundaries. The use
motionproﬁlesappropriateforhumanrobotcollaboration.The of saturation on the robot’s velocity does not resolve this
proposedmethodemploysamodiﬁedversionofaDMP,learned problemasitgeneratesacompletelydifferentvelocityproﬁle
by a demonstration to a static goal, with adaptive temporal
than that of the demonstration. However, in robot human
scaling in order to achieve reaching of the moving goal with
coexistence, safety, trust and robot motion predictability is
the learned kinematic pattern. Only the current position and
velocity of the goal are required. The goal’s reaching error of outmost importance. It is therefore essential to maintain
and its derivative is proved to converge to zero via contraction these human-like motion characteristics encoded during the
analysis.Thetheoreticalresultsareveriﬁedbysimulationsand demonstration.
experiments on a KUKA LWR4+ robot.
Adifferentsolutiontotheproblemofhighvelocitiesisto
notrequireaﬁxedmotionduration.Thisispossibleinmod-
I. INTRODUCTION
elsthatdonotencodetemporalcharacteristicsofthemotion
In recent years, Dynamic Movement Primitives (DMP)
[15].Alternativelyonecouldadaptthemotiondurationasin
have provided a way of encoding arbitrary complex mo-
[16]; this adaptation is based on the utilization of a model
tions utilizing non - linear dynamics [1]–[5]. This encoding
for the goal dynamics which predicts the reaching location.
provides accuracy in the execution of the motion, as well
However, such a model may not be available when for
as the ability to generalize to spatial and temporal scaling.
exampletherobotinteractswithagentsofunknowndynamic
DMP have been used for a wide range of tasks. Both
behaviour. Such agents could be other robots or humans
point to point or discrete motions, as well as rhythmic,
whose motion patterns may not be necessarily known. In
periodic trajectories are able to be encoded, resulting in
[17]aDMPformulationhasbeenproposedinthecontextof
the encoding of various behaviours and motion patterns
hitting a moving ball with a speciﬁed velocity. This method
[6], [7]. Modiﬁed DMP have also been proposed to extend
hasbeenextendedin[18]utilizingtheprobabilisticDMPfor-
their robustness to temporal and or spatial perturbations [8],
mulation proposed in [19]. Both formulations require again
[9]. Moreover, appropriately designed coupling terms have
a predictor to estimate the reaching location and the moving
been used for DMP adaptation to external inputs (e.g. force
goal’s velocity at this point. Utilizing a predictor however
adaptation) [10]–[12]. DMP are proven advantageous over
causes the system to heavily depend on the prediction errors
typical trajectory encoding mechanisms as they are able to
which can lead to execution failure.
generalize the learned pattern both spatially and temporally
The objective of this work is to enable a DMP, encoding
aswellasbeusedinconjunctionwithotherdynamicalﬁelds
a kinematic behaviour to a stationary target, to be utilized
togenerateinrealtimecomplexbehavioursinenvironments
in the case of a moving target keeping velocities at levels
with goal perturbations and obstacles [9].
similar to the demonstrated ones. Only the current goal’s
MovementsencodedbyDMParedesignedtobeexecuted
position and velocity is assumed to be provided by the
towards a stationary goal known before the start of the
perceptionsystemasopposedtotheaboveworks.Toachieve
motion although it can be perturbed to another stationary
this objective we propose a modiﬁed DMP for motion
goal during motion. Few research efforts have been focused
generationtoamovinggoalandproveitsconvergencetothe
on DMP utilization with a moving goal. In [13], the authors
goalusingcontractionanalysis.Simulationsandexperiments
aremodifyingtheDMP,tofollowamovinggoalinaleader-
areutilizedtovalidatethetheoreticalﬁndings.Byalleviating
followerframework.In[14]byaugmentingamodiﬁedDMP
the need of predictions and/or goal model dynamics the
formulation with velocity feedback the authors allow the
proposed approach does not depend on any prediction errors
systemtofollowmovinggoals.Inboththeseworksposition
and addresses cases of unknown goal dynamics. Moreover,
it addresses a wider range of DMP applications that involve
Authors are with the Automation & Robotics Lab, Dept. of Elec-
trical & Computer Engineering, Aristotle University of Thessaloniki, collaboration with humans and work in shared environments
{ }
Greece. kleonidas@ece, doulgeri@eng .auth.gr in which maintaining a certain velocity level is important
The research leading to these results has received funding by the EU
for the human safety and the robot’s motion predictability.
Horizon2020ResearchandInnovationProgrammeundergrantagreement
No820767,projectCoLLaboratE. Such applications include collaborative tasks like handover
978-1-7281-7395-5/20/$31.00 ©2020 IEEE 144
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. or collaborative assembly in which the human (or another B. Contraction Analysis
robot’s) hand are considered as moving goals [13], [14].
Contraction Analysis was introduced in [20] and used in
II. PRELIMINARIES conjunction with DMP in [21] with the objective to provide
a simpler method for the stability analysis of non linear dy-
A. Dynamic Movement Primitives
namicalsystems.Insteadoftryingtoverifypointequilibrium
Dynamic movement primitives (DMP) are used to encode
stability, this framework tries to prove that if neighbouring
trajectories, through the augmentation of a unique point
state trajectories converge to each other, then all trajectories
attractorlineardynamicalsystemwithanon-lineartermthat
should exponentially converge to a single trajectory. This
encapsulates arbitrary complex shape modulations known as
methodology can be expressed mathematically as follows:
the transformation system of the DMP. For encoding an n
DeﬁnitionI [20]:Giventhesystemequationsx˙ =f(t,x)
degrees of freedom task, the transformation system is given
a region of the state space is called a contraction region if
by [5]:
theJacobian ∂f isuniformlynegativedeﬁniteinthatregion.
− − − ∂t
τz˙ =αz(βz(g y) z)+diag(g y0)F(x) (1) Theorem I [20]: Given the system equations x˙ =f(t,x),
τy˙ =z any trajectory, which starts in a ball of constant radius
where y ∈Rn is the position, z ∈Rn is the scaled velocity, centered about a given trajectory and contained at all times
g ∈ Rn is the attractor of the linear system, y ∈ Rn its in a contraction region, remains in that ball and converges
initial position, diag(g−y ) ∈ Rn×n is a diago0nal matrix exponentially to this trajectory. Furthermore, global expo-
with its elements equal to th0e coordinates of g−y , τ is a nential convergence to the given trajectory is guaranteed if
0
scalar temporal scaling term, which traditionally is set equal the whole state space is a contraction region.
to the duration of the motio(cid:80)n and F(x)∈Rn is the forcing Proposition 1 [21]: If f1(t,x1) is contracting and
term which determines the m(cid:80)otion pattern: f (t,x ,x ) is contracting for each ﬁxed x , then the
2 1 2 1
hierarchy x˙ =f (t,x ), x˙ =f (t,x ,x ) is contracting.
w Ψ (x)x 1 1 1 2 2 1 2
F(x)= i i i (2)
Ψ (x) III. PROPOSEDMODIFIEDDMPFORREACHING
∈ R i i MOVINGGOALS
with w n being the weights of the N Gaussian kernel
i
functions Ψ : Consider a moving goal g(t), g˙(t). We assume that
i
− − a perception system provides the goal’s position and an
Ψ (x)=exp[ h (x c )2] (3)
i i i estimate of its velocity on-line. The latter can be calculated
and c the kernels’ centers distributed to the interval [0,1] by numerically differentiating the position measurements.
i
and h their inverse widths. Variable x is a monotonically WeproposethefollowingDMPtransformationsystemfor
i
decreasing phase variable, whose dynamics are known as the case of a moving goal:
the canonical system and are given by a ﬁrst order system − −
with its initial value set to 1: τz˙ = αz(βze+z)+diag(g y0)F(x) (5)
− τe˙ =z
τx˙ = αxx (4) where e = g −y ∈ Rn is the position error and z ∈ Rn
DMP are traditionally used for movements towards a con- is the scaled velocity error. Notice that (5) is equivalent to
stant goal g. (1) for the case of a stationary goal with the forcing term
As mentioned earlier, the DMP framework is able to expressing the negative of that in (1). The system is trained
generalize to new goals. When a new stationary goal is as the traditional DMP framework, using a demonstration
selected, the demonstrated trajectory is scaled accordingly from the initial position y to the stationary goal g with
0,d d
to the new goal’s position. Therefore the generated position, temporal scaling τ .
d
velocity and acceleration will be the scaled demonstrated
In order for the system to generate a trajectory with the
motiontothenewgoal.Forexampleagoalwhichistwiceas
encoded motion pattern while reaching a moving goal, the
farfromtheinitialpositionascomparedtothedemonstrated
temporalscalingparameterτ mustbecontinuouslyadjusted.
goal, will produce twice as large velocity and acceleration.
If the robot keeps the motion pattern of the demonstrated
As discussed in Section I this property may not be suitable
motion without adjusting its time scaling [13], [14] then, a
for collaborative environments.
farawaytargetwouldinducehighvelocitiesthatcouldexceed
In case the new goal is not stationary but moving, the
therobot’scapabilities.Hence,inthecaseofamovingtarget,
system may be eventually able to track the goal but the
the temporal scaling parameter should be modiﬁed in real
trajectory does not follow the encoded motion pattern after
time. We propose to augment the DMP system with the
a preset time duration since the forcing term goes to zero
following temporal scaling adaption law:
when the phase variable vanishes. This is happening as the
− −
phase variable evolution (4) does not depend on g. For τ˙ = κτ(τ τg)+τ˙g (6)
example when tracking a goal that moves away from the
where κ is a positive design parameter and τ is given by:
initial position, the phase variable will reach zero before τ g
(cid:107) − (cid:107)
reaching the goal, which implies a zero forcing term, thus g y
τ = (cid:107) − 0 (cid:107)τ (7)
removing all encoded motion patterns from the trajectory. g g y d
d 0,d
145
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. − − ∀
Equation (6) ensures the tracking of τ which can be have τ = τ and x˙ = 1 α x. As 1 α < 0, t and
interpreted as the temporal scaling relategd to the motion thetimedepgendedparametτegrτx isboundτegd,xx˙ =− 1 α xis
towards the current goal location g(t) considered stationary. also contracting. Therefore, usging Proposition 1 wτegprxoved
−
Wthehetnemthpeoragloaslcamlionvgesinacwreaaysesf,rolmeadtihnegintoitiasllowpoesritisoynsteym0 tihsactotnhterahciteirnagr.chFiicnaalllcyo,minbionradteiorntoofp(r1o1v)eatnhdatosfyxs˙te=m (1τ10α)xixs
evolution. This slow down counteracts the speed-up caused contracting we will prove that the hierarchical combination
by the goal’s position. When the goal approaches the initial of (cid:20)the(cid:21)syst(cid:20)em comprised of the last two equations o(cid:21)f (10) is
position, τ decreases leading to faster execution. This again also contracting. In particular, the system:
counteracts the slowing down caused by the goal’s position.
In this way, the produced trajectory maintains the demon- e˙ = − τ1z − (12)
strated(cid:54)velocity characteristics. Notice that τg is bounded z˙ τ1( αz(βze+z)+diag(g y0)F(x))
for gd = y0,d which is generally true for discrete motions. for the ﬁxed(cid:20)p(cid:21)oint [eτ(cid:20)x]T =[0 0]T, which(cid:21)(cid:20)imp(cid:21)lies τ =τg,
We also assume tha(cid:107)t the g−oal (cid:107)wil(cid:54)l not∀coincide with the F(x)=F(0)=0, can be written as:
initial position y , g(t) y = 0, t, which implies
0 0
τg >0.Thesameassumptionholdsfor(1)inordertoenable e˙ = 1 − 0n −In e (13)
motion encoding by ensuring a non-zero value for the term z˙ τg αzβzIn αzIn z
−
diag(g y )F(x).Thederivativeτ˙ in(6)canbecomputed which is a linear time varying system, with strictly negative
0 g
analyticallyfromthegoal’spositionandvelocity.Noticethat eigenvalues for all values of the bounded time dependent
×
the proposed system does not require a model for the goal’s parameter τ . We denote I the n n identity matrix and
×g n
motion, but only measurements of the goal’s position and 0 the n n zero matrix. Notice that τ is bounded by the
n g
velocity.Furthernoticethatafterthemovinggoalisreached minimum and maximum distances between y and g(t).
0
the forcing term vanishes; if then a disturbance temporarily TheoremII[22]:Consideralinearnonautonomoussystem
displaces the arm away from the goal trajectory the DMP x˙ = A(t)x,x ∈ Rn,A(t) ∈ Rn×n. The equilibrium
system may be re-initialized if a kinematic behavior similar state x = 0 is exponentially stable if and only if for any
to the demonstrated is desired. given symmetric, positive deﬁnite, continuous and bounded
We claim that the system composed of (4), (5), and (6) matrix Q(t), there exists a symmetric, positive deﬁnite,
withτ(0)=τg(0)canachievetheobjectiveofreproducinga continuously differentiable and bounded matrix P(t) such
desiredkinematicbehaviourwhilereachingamovingtarget. that:
A. Stability Analysis −
The complete system can be written as: Q(cid:34)(t)=P(t)A(t)+AT(t)P(t)+P˙(t(cid:35)) (14)
− − We select matrix P:
τ˙ = κ (τ τ )+τ˙
− τ g g
τx˙ = α x 1 (β + 1 + 1 )I 1 I
− x − (8) P = z αz βz n αzβz n (15)
ττze˙˙ == zαz(βze+z)+diag(g y0)F(x) 2 αz1βzIn (α1z + α2z1βz)In
P does not depend on time, therefore it is by construct
Stability analysis concerns the asymptotic convergence of
− − bounded, and continuously differentiable, with P˙ = 0. P
thegoaltrackingerrore=g yanditsvelocity,e˙ =g˙ y˙ to is also positive deﬁnite (See Appendix). With this selection,
zero.Inaddition,τ mustfollowthedesiredtemporalsca−ling we obtain:
τ , therefore the temporal scaling tracking error e =τ τ 1
g τ g Q(t)= I (16)
must also converge to(cid:2)zero. (cid:3) τ 2n
g
We deﬁne the state vector s as follows:
Q(t) is bounded by the maximum and minimum values of
s= e x eT zT T (9) its eigenvalues:
   τ 
and write the system (8) in the state space form: 1 ≤ ≤ 1
    xTx xTQ(t)x xTx (17)
   −  τ τ
e˙   κ e  g,max g,min
τ − τ τ ∀ ∈R ∀
x˙ 1α x x 2n.ThereforeQ(t)isbounded tandusingTheorem
s˙ = = τ x
e˙ 1z II the system of (13) is exponentially stable.
− τ −
z˙ 1 ( α (β e+z)+diag(g y )F(x)) Hence, the system is contracting. Thus using Proposition
τ z z 0 (10) 1weconcludethatthishierarchyisalsogloballycontracting.
The system consisting of the ﬁrst two equations of (10) is a Consequently, system (10) is contracting in the whole state
hierarchical combination of the linear ﬁrst order system: space. As a result, all trajectories converge exponentially to
− the unique equilibrium point s = 0, where e = 0, e˙ =
e˙ = κ e (11)
τ τ τ 0 and e = 0 reaching the moving goal. The rate of this
− τ
and of x˙ = 1α x. System (11) is globally exponentially exponential convergence will be bounded between the rates
τ x −
stable, with a unique equilibrium at e = 0, as κ < 0. corresponding to the largest, from above and smallest, from
τ τ
Thereforethesystemisgloballycontracting.Fore =0,we below value of τ.
τ
146
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. TABLEI:SYSTEMPARAMETERS
Parameter Description Value
0.9
αz GainofDMP 40
βz GainofDMP 10 0.8
αx Gainofphasesystem 4.6052 0.7
N NumberofGaussianKernels 60
κτ Gainoftemporalscalingcontroller 100 0.6
0.5
0.4
IV. SIMULATIONS 0.3
For the demonstration with simulations of the system’s 0.2
performance the following setup was used. We have initially
0
createda3-DtrajectoryintheCartesianSpacetoastationary 0.5
goal from y = [0.2 0.3 0.85]T to g = [0.6 0.6 0.65]T 1
0,d d
with duration τ = 1.124s. Then we trained the proposed 1.5
DMP (5) utilizindg these data. The DMP parameters used in 2 1.5 1 0.5
the simulation are depicted in Table I. The value of αx was Fig.1:PathoftheDMP,thedemonstrationandthemovinggoal.
chosensothatxreaches0.01attheendofthedemonstrated
motion. To demonstrate the DMP capabilities in the case
of a moving goal, we simulated the motion of a moving
agent, from g = [0.6 0.8 0.75]T to g = [2 1.5 0.18]T. 2
1 2
We then executed both the goal motion and the proposed
1
DMP for moving goals (4) - 6), from the initial position
0
y = y , feeding back the DMP with the current goal 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
0 0,d
position and velocity. Notice that the system reaches the
goal at the point g = [1.92 1.44 0.33], at time t = 3.37s 2
c
beforethegoalcompletesitsexecutionandreachesg .After 1
2
reaching the goal the system tracks the goal’s motion to g2. 0
The simulation results are presented in Figures 1 - 5. In 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
particular, Figures 1, 2 and 3 show the path and trajectories
1
oftheycoordinatesanditsderivativesaswellasthoseofthe
movinggoal.Weseethegoalmovingfromapositiong near 0.5
1
the stationary goal g of the demonstration (red line path in 0
d 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
Figure 1) following its own trajectory (black dashed line in
Figures 2 and 3) towards g which is further away from y
2 0
as compared to g . The relative position and velocity errors Fig. 2: Evolution of the position when reaching the moving goal. Also
1
converge to zero validating the theoretical analysis as shown depictingthegoaltrajectoryaswellasthedemonstrationtrajectory.
in Figure 4. As shown in Figure 5, τ increases as the goal
movesawayfromtheinitialpositiony .Theadaptationofτ
0
prevents the appearance of high velocities as seen in Figure
2
3 keeping the velocity at levels similar to the demonstration.
Notice in Figure 3, the discontinuity arising initially since 0
(cid:54)
g˙ = 0 at t = 0. In practice, smoothness techniques should -2
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
be employed at the beginning of motion. To demonstrate
the advantages of the temporal adaptation law (6), Figure
1
6 shows the proposed DMP velocities together with those
0.5
produced in a DMP execution without temporal adaptation
(4), (5) with τ =τ . Notice the higher velocities induced by 0
d 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
the lack of temporal adaptation. This may not be acceptable
as it may exceed the robot’s capabilities, be dangerous for 0
humans and ruin the human-likeness of the demonstrated
-0.5
motion.
-1
Overall, simulation results show that the proposed DMP 0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
framework successfully reaches the moving goal, scaling
thedemonstratedmotion’spositionpatternandsubsequently
Fig. 3: Evolution of the velocity when reaching the moving goal. Also
tracks the goal motion, while maintaining velocity levels
depictingthegoaltrajectoryaswellasthedemonstrationtrajectory.
close to the demonstrated ones.
147
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. 2
0.4
1
0
0.35
-1
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5
0.3
2
0.25
0
-2
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 0.3
0.4 0
0.5 0.2
0.4
Fig.4:Positionandvelocityerrorsineachcoordinate.
Fig. 7: Experimental Result: Path of the robot, the demonstration and the
movinggoal.
5 V. EXPERIMENTS
Todemonstratetheproposedmethodonrealworldcondi-
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 tions,animplementationwasmadeona7degreeoffreedom
KUKA LWR4+ robotic manipulator. The methodology was
4
implemented in C++, on a real-time Linux PC. For the
2
communication with robot, the FRI library [23] was used,
0
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 with control frequency 500Hz. Robot kinesthetic guidance
was used to record two trajectories. The recorded tool
Fig.5:Temporalscalingτ anditsderivativeτ˙. position data from the ﬁrst demonstration was used to train
the proposed DMP (4), (5) while data from the second
demonstration was used to emulate a moving target. During
both demonstrations the robot was under gravity compensa-
tion and high stiffness orientation control for maintaining its
initial tool orientation.
5 The demonstrated trajectory started from initial position
y = [0.39 0.32 0.24]T towards the goal position g =
0,d d
0 [0.03 0.56 0.36]T in 6.54s. The moving goal’s demon-
strated trajectory started from the stationary goal of the
-5 demonstration g , moving closer to the initial position and
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 d
reachingg =[0.190.440.31]T.DuringexecutiontheDMP
c
with the parameters of Table I generated the tool reference
2
trajectory which was mapped to the joint space by the
0 Jacobianpseudoinverse.Closedloopinversekinematics[24]
was utilized to ensure accurate following of the reference
-2
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 trajectory. The robot’s initial position was set equal to the
demonstrated one. When the moving goal was reached in
4.7s, the execution was terminated.
0.5
Resultsofthepath,thepositionandvelocitytrajectoryand
0 the goal’s trajectory are shown in Figures 7 - 9. The robot’s
-0.5 position and velocity coincide with the reference generated
by the DMP. Position and velocity error convergence is
-1
0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 shown in Figure 10. The temporal scaling parameter τ is
showntodecreaseinFigure11asthegoalisapproachingthe
initialposition,fromitinitialvalueofτ =6.54toτ =3.63
Fig.6:Evolutionofthevelocitywhenreachingthemovinggoalwithand d
attheendofmotion.Asthegoalmovementwassimulatedby
withouttemporalscalingadaptation.
a demonstrated motion, measurements of the velocity were
available. However, we chose to numerically differentiate
148
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. 10
0.5
5
0 0
0 1 2 3 4 5 6 7
-0.5
0 1 2 3 4 5 6 7
2
0.6 0
0.4 -2
0 1 2 3 4 5 6 7
0.2
0 1 2 3 4 5 6 7
Fig. 11: Experimental Result: Temporal scaling τ and its derivative τ˙ at
therobotexperiment.
0.4
0.3
0.2 the values of g, as it would happen if the goal’s state
0 1 2 3 4 5 6 7
was provided by a perception system. This differentiation
explains the noise appearing in the g˙ and τ˙ in Figures 9 and
Fig. 8: Experimental Result: Evolution of the position of the robot when 11. The system however is not affected as it is evident from
reachingthemovinggoal.Alsodepictingthegoaltrajectoryaswellasthe Figures 7 - 11.
demonstrationtrajectory.
VI. CONCLUSIONS
In this paper a modiﬁed DMP framework is proposed
0.5 for the case of reaching moving goals maintaining the
demonstrated velocity characteristics. The framework only
0
requires the goal’s current position and velocity that can
-0.5
0 1 2 3 4 5 6 7 be in general provided by a perception system. Thus, it
avoids prediction and model uncertainty errors that arise in
0.2 predictor or model based approaches. Temporal adaptation
0 provides predictable velocity behaviours that remain closer
to the demonstrated as the moving goal scales the trajectory
-0.2
0 1 2 3 4 5 6 7 spatially. This generalization allows DMP to be used for
morecomplextasksandtooperateeffectivelyinworkplaces
0.1
shared with humans. The reaching of the moving goal is
0 theoretically proved and validated by both simulations and
-0.1 experiments.
0 1 2 3 4 5 6 7
APPENDIX
(cid:20) (cid:21)
Theorem III [25]: Consider a matrix that can be written
Fig. 9: Experimental Result: Evolution of the velocity the robot when
reaching the moving goal. Also depicting the goal trajectory as well as as:
thedemonstrationtrajectory. A B
X = (18)
BT C
∈ R × ∈ R × ∈ R × ∈ R ×
with X m m, A p p, B p q and C q q,
0.5 where m=p+q.
The Schur complement of A in X is denoted X/A and
0 deﬁned as:
− −
X/A=C BTA 1B (19)
-0.50 1 2 3 4 5 6 7 If A and X/A are both positive deﬁnite, then X is also
positive deﬁnite.
0.4 Notice that matrix P of (15) has the form described in
(18) with A = 1(β + 1 + 1 )I , B = 1 1 I , C =
0.2 1( 1 + 1 )I2, mz =αz2n aβnzd pn = q =2αnz.βzThne Schur
0 c2omαzplemeαn2ztβzof An in P is:
-0.2 1 (α β +1)2+α2
0 1 2 3 4 5 6 7 P/A= z z z I (20)
2α3β2+α2β +α3 n
z z z z z
Fig.10:ExperimentalResult:Positionandvelocityerrorsineachcoordinate Both A and P/A are positive deﬁnite, thus P is also
attherobotexperiment.
positive deﬁnite.
149
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. REFERENCES [21] P. M. Wensing and J.-J. Slotine, “Sparse control for dynamic move-
ment primitives,” IFAC-PapersOnLine, vol. 50, no. 1, pp. 10114 –
[1] S. Schaal, S. Kotosaka, and D. Sternad, “Nonlinear dynamical sys-
10121,2017,20thIFACWorldCongress.
tems as movement primitives,” in Humanoids2000, First IEEE-RAS [22] H. Marquez, Nonlinear Control Systems: Analysis and Design, 11
International Conference on Humanoid Robots. Cambridge, MA:
2002,ch.4.
CD-Proceedings,Sept.2000,clmc.
[23] G.Schreiber,A.Stemmer,andR.Bischoff,“Thefastresearchinterface
[2] A.J.Ijspeert,J.Nakanishi,andS.Schaal,“Movementimitationwith for the kuka lightweight robot,” in IEEE ICRA 2010 Workshop on
nonlinear dynamical systems in humanoid robots,” in Proceedings Innovative Robot Control Architectures for Demanding (Research)
2002 IEEE International Conference on Robotics and Automation
Applications,2010.
(Cat.No.02CH37292),vol.2,May2002,pp.1398–1403vol.2. [24] B.SicilianoandO.Khatib,SpringerHandbookofRobotics. Berlin,
[3] S.Schaal,J.Peters,J.Nakanishi,andA.Ijspeert,“Learningmovement
Heidelberg:Springer-Verlag,2007,ch.11.
primitives,”inRoboticsResearch.TheEleventhInternationalSympo- [25] F.Z.Zhang,TheSchurComplementandItsApplications,012005.
sium, P. Dario and R. Chatila, Eds. Berlin, Heidelberg: Springer
BerlinHeidelberg,2005,pp.561–572.
[4] A. J. Ijspeert, J. Nakanishi, and S. Schaal, “Learning attractor land-
scapes for learning motor primitives,” in Proceedings of the 15th
InternationalConferenceonNeuralInformationProcessingSystems,
ser.NIPS’02. MITPress,2002,pp.1547–1554.
[5] A. J. Ijspeert, J. Nakanishi, H. Hoffmann, P. Pastor, and S. Schaal,
“Dynamicalmovementprimitives:Learningattractormodelsformotor
behaviors,” Neural Computation, vol. 25, no. 2, pp. 328–373, Feb
2013.
[6] S. Schaal, Dynamic Movement Primitives -A Framework for Motor
ControlinHumansandHumanoidRobotics. Tokyo:SpringerTokyo,
2006,pp.261–280.
[7] J. Rosado, F. Silva, and V. Santos, “Adaptation of robot locomotion
patternswithdynamicmovementprimitives,”in2015IEEEInterna-
tional Conference on Autonomous Robot Systems and Competitions,
April2015,pp.23–28.
[8] M. Karlsson, A. Robertsson, and R. Johansson, “Convergence of
dynamical movement primitives with temporal coupling,” in 2018
European Control Conference (ECC). IEEE–Institute of Electrical
andElectronicsEngineersInc.,62018.
[9] H.Hoffmann,P.Pastor,D.Park,andS.Schaal,“Biologically-inspired
dynamical systems for movement generation: Automatic real-time
goaladaptationandobstacleavoidance,”in2009IEEEInternational
ConferenceonRoboticsandAutomation,May2009,pp.2587–2592.
[10] P. Pastor, L. Righetti, M. Kalakrishnan, and S. Schaal, “Online
movementadaptationbasedonprevioussensorexperiences,”in2011
IEEE/RSJInternationalConferenceonIntelligentRobotsandSystems,
Sept2011,pp.365–371.
[11] A.Gams,B.Nemec,A.J.Ijspeert,andA.Ude,“Couplingmovement
primitives: Interaction with the environment and bimanual tasks,”
IEEE Transactions on Robotics, vol. 30, no. 4, pp. 816–830, Aug
2014.
[12] B.Nemec,A.Gams,M.Denisˇa,andA.Ude,“Human-robotcooper-
ation through force adaptation using dynamic motion primitives and
iterativelearning,”in2014IEEEInternationalConferenceonRobotics
andBiomimetics(ROBIO2014),Dec2014,pp.1439–1444.
[13] Y.Zhou,M.Do,andT.Asfour,“Coordinatechangedynamicmove-
ment primitives — a leader-follower approach,” in 2016 IEEE/RSJ
International Conference on Intelligent Robots and Systems (IROS),
Oct2016,pp.5481–5488.
[14] M.Prada,A.Remazeilles,A.Koene,andS.Endo,“Dynamicmove-
mentprimitivesforhuman-robotinteraction:Comparisonwithhuman
behavioral observation,” in 2013 IEEE/RSJ International Conference
onIntelligentRobotsandSystems,Nov2013,pp.1168–1175.
[15] E. Gribovskaya and A. Billard, “Learning nonlinear multi-variate
motion dynamics for real-time position and orientation control of
roboticmanipulators,”in20099thIEEE-RASInternationalConference
onHumanoidRobots,Dec2009,pp.472–477.
[16] S.Kim,A.Shukla,andA.Billard,“Catchingobjectsinﬂight,”IEEE
TransactionsonRobotics,vol.30,no.5,pp.1049–1065,Oct2014.
[17] J.Kober,K.Mu¨lling,O.Kro¨mer,C.H.Lampert,B.Scho¨lkopf,and
J. Peters, “Movement templates for learning of hitting and batting,”
in2010IEEEInternationalConferenceonRoboticsandAutomation,
May2010,pp.853–858.
[18] S.Gomez-Gonzalez,G.Neumann,B.Scho¨lkopf,andJ.Peters,“Using
probabilistic movement primitives for striking movements,” in 2016
IEEE-RAS 16th International Conference on Humanoid Robots (Hu-
manoids),Nov2016,pp.502–508.
[19] A. Paraschos, C. Daniel, J. Peters, and G. Neumann, “Probabilistic
movement primitives,” in Advances in NeuralInformation Processing
Systems,2013,p.2616–2624.
[20] W. Lohmiller and J.-J. E. Slotine, “On contraction analysis for non-
linearsystems,”Automatica,vol.34,no.6,pp.683–696,June1998.
150
Authorized licensed use limited to: University of New South Wales. Downloaded on September 20,2020 at 10:52:05 UTC from IEEE Xplore.  Restrictions apply. 